

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 11 17:27:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1828
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1828 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  020E                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  0291                     	;# 
   169  0291                     	;# 
   170  0292                     	;# 
   171  0293                     	;# 
   172  0294                     	;# 
   173  0295                     	;# 
   174  0295                     	;# 
   175  0296                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  029B                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  029E                     	;# 
   185  0311                     	;# 
   186  0311                     	;# 
   187  0312                     	;# 
   188  0313                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  038C                     	;# 
   194  038D                     	;# 
   195  038E                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  041C                     	;# 
   211  041D                     	;# 
   212  041E                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE9                     	;# 
   219  0FEA                     	;# 
   220  0FEB                     	;# 
   221  0FED                     	;# 
   222  0FEE                     	;# 
   223  0FEF                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  010E                     	;# 
   273  0111                     	;# 
   274  0112                     	;# 
   275  0113                     	;# 
   276  0114                     	;# 
   277  0115                     	;# 
   278  0116                     	;# 
   279  0117                     	;# 
   280  0118                     	;# 
   281  0119                     	;# 
   282  011A                     	;# 
   283  011B                     	;# 
   284  011D                     	;# 
   285  011E                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  018E                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0194                     	;# 
   296  0195                     	;# 
   297  0196                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019C                     	;# 
   305  019C                     	;# 
   306  019D                     	;# 
   307  019E                     	;# 
   308  019F                     	;# 
   309  020C                     	;# 
   310  020D                     	;# 
   311  020E                     	;# 
   312  0211                     	;# 
   313  0211                     	;# 
   314  0212                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0213                     	;# 
   318  0214                     	;# 
   319  0214                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0217                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  029B                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029E                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  038C                     	;# 
   354  038D                     	;# 
   355  038E                     	;# 
   356  0391                     	;# 
   357  0392                     	;# 
   358  0393                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  039A                     	;# 
   363  039C                     	;# 
   364  039D                     	;# 
   365  039E                     	;# 
   366  039F                     	;# 
   367  0415                     	;# 
   368  0416                     	;# 
   369  0417                     	;# 
   370  041C                     	;# 
   371  041D                     	;# 
   372  041E                     	;# 
   373  0FE4                     	;# 
   374  0FE5                     	;# 
   375  0FE6                     	;# 
   376  0FE7                     	;# 
   377  0FE8                     	;# 
   378  0FE9                     	;# 
   379  0FEA                     	;# 
   380  0FEB                     	;# 
   381  0FED                     	;# 
   382  0FEE                     	;# 
   383  0FEF                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  0111                     	;# 
   434  0112                     	;# 
   435  0113                     	;# 
   436  0114                     	;# 
   437  0115                     	;# 
   438  0116                     	;# 
   439  0117                     	;# 
   440  0118                     	;# 
   441  0119                     	;# 
   442  011A                     	;# 
   443  011B                     	;# 
   444  011D                     	;# 
   445  011E                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018E                     	;# 
   449  0191                     	;# 
   450  0191                     	;# 
   451  0192                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0194                     	;# 
   456  0195                     	;# 
   457  0196                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020C                     	;# 
   470  020D                     	;# 
   471  020E                     	;# 
   472  0211                     	;# 
   473  0211                     	;# 
   474  0212                     	;# 
   475  0212                     	;# 
   476  0213                     	;# 
   477  0213                     	;# 
   478  0214                     	;# 
   479  0214                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0216                     	;# 
   485  0216                     	;# 
   486  0217                     	;# 
   487  0217                     	;# 
   488  0291                     	;# 
   489  0291                     	;# 
   490  0292                     	;# 
   491  0293                     	;# 
   492  0294                     	;# 
   493  0295                     	;# 
   494  0295                     	;# 
   495  0296                     	;# 
   496  0298                     	;# 
   497  0298                     	;# 
   498  0299                     	;# 
   499  029A                     	;# 
   500  029B                     	;# 
   501  029C                     	;# 
   502  029D                     	;# 
   503  029E                     	;# 
   504  029E                     	;# 
   505  0311                     	;# 
   506  0311                     	;# 
   507  0312                     	;# 
   508  0313                     	;# 
   509  0318                     	;# 
   510  0318                     	;# 
   511  0319                     	;# 
   512  031A                     	;# 
   513  038C                     	;# 
   514  038D                     	;# 
   515  038E                     	;# 
   516  0391                     	;# 
   517  0392                     	;# 
   518  0393                     	;# 
   519  0394                     	;# 
   520  0395                     	;# 
   521  0396                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0415                     	;# 
   528  0416                     	;# 
   529  0417                     	;# 
   530  041C                     	;# 
   531  041D                     	;# 
   532  041E                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001E                     	;# 
   572  001F                     	;# 
   573  008C                     	;# 
   574  008D                     	;# 
   575  008E                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0093                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  0111                     	;# 
   594  0112                     	;# 
   595  0113                     	;# 
   596  0114                     	;# 
   597  0115                     	;# 
   598  0116                     	;# 
   599  0117                     	;# 
   600  0118                     	;# 
   601  0119                     	;# 
   602  011A                     	;# 
   603  011B                     	;# 
   604  011D                     	;# 
   605  011E                     	;# 
   606  018C                     	;# 
   607  018D                     	;# 
   608  018E                     	;# 
   609  0191                     	;# 
   610  0191                     	;# 
   611  0192                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0194                     	;# 
   616  0195                     	;# 
   617  0196                     	;# 
   618  0199                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019C                     	;# 
   625  019C                     	;# 
   626  019D                     	;# 
   627  019E                     	;# 
   628  019F                     	;# 
   629  020C                     	;# 
   630  020D                     	;# 
   631  020E                     	;# 
   632  0211                     	;# 
   633  0211                     	;# 
   634  0212                     	;# 
   635  0212                     	;# 
   636  0213                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0214                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0291                     	;# 
   649  0291                     	;# 
   650  0292                     	;# 
   651  0293                     	;# 
   652  0294                     	;# 
   653  0295                     	;# 
   654  0295                     	;# 
   655  0296                     	;# 
   656  0298                     	;# 
   657  0298                     	;# 
   658  0299                     	;# 
   659  029A                     	;# 
   660  029B                     	;# 
   661  029C                     	;# 
   662  029D                     	;# 
   663  029E                     	;# 
   664  029E                     	;# 
   665  0311                     	;# 
   666  0311                     	;# 
   667  0312                     	;# 
   668  0313                     	;# 
   669  0318                     	;# 
   670  0318                     	;# 
   671  0319                     	;# 
   672  031A                     	;# 
   673  038C                     	;# 
   674  038D                     	;# 
   675  038E                     	;# 
   676  0391                     	;# 
   677  0392                     	;# 
   678  0393                     	;# 
   679  0394                     	;# 
   680  0395                     	;# 
   681  0396                     	;# 
   682  039A                     	;# 
   683  039C                     	;# 
   684  039D                     	;# 
   685  039E                     	;# 
   686  039F                     	;# 
   687  0415                     	;# 
   688  0416                     	;# 
   689  0417                     	;# 
   690  041C                     	;# 
   691  041D                     	;# 
   692  041E                     	;# 
   693  0FE4                     	;# 
   694  0FE5                     	;# 
   695  0FE6                     	;# 
   696  0FE7                     	;# 
   697  0FE8                     	;# 
   698  0FE9                     	;# 
   699  0FEA                     	;# 
   700  0FEB                     	;# 
   701  0FED                     	;# 
   702  0FEE                     	;# 
   703  0FEF                     	;# 
   704  0000                     	;# 
   705  0001                     	;# 
   706  0002                     	;# 
   707  0003                     	;# 
   708  0004                     	;# 
   709  0005                     	;# 
   710  0006                     	;# 
   711  0007                     	;# 
   712  0008                     	;# 
   713  0009                     	;# 
   714  000A                     	;# 
   715  000B                     	;# 
   716  000C                     	;# 
   717  000D                     	;# 
   718  000E                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0015                     	;# 
   723  0016                     	;# 
   724  0016                     	;# 
   725  0017                     	;# 
   726  0018                     	;# 
   727  0019                     	;# 
   728  001A                     	;# 
   729  001B                     	;# 
   730  001C                     	;# 
   731  001E                     	;# 
   732  001F                     	;# 
   733  008C                     	;# 
   734  008D                     	;# 
   735  008E                     	;# 
   736  0091                     	;# 
   737  0092                     	;# 
   738  0093                     	;# 
   739  0095                     	;# 
   740  0096                     	;# 
   741  0097                     	;# 
   742  0098                     	;# 
   743  0099                     	;# 
   744  009A                     	;# 
   745  009B                     	;# 
   746  009B                     	;# 
   747  009C                     	;# 
   748  009D                     	;# 
   749  009E                     	;# 
   750  010C                     	;# 
   751  010D                     	;# 
   752  010E                     	;# 
   753  0111                     	;# 
   754  0112                     	;# 
   755  0113                     	;# 
   756  0114                     	;# 
   757  0115                     	;# 
   758  0116                     	;# 
   759  0117                     	;# 
   760  0118                     	;# 
   761  0119                     	;# 
   762  011A                     	;# 
   763  011B                     	;# 
   764  011D                     	;# 
   765  011E                     	;# 
   766  018C                     	;# 
   767  018D                     	;# 
   768  018E                     	;# 
   769  0191                     	;# 
   770  0191                     	;# 
   771  0192                     	;# 
   772  0193                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0194                     	;# 
   776  0195                     	;# 
   777  0196                     	;# 
   778  0199                     	;# 
   779  019A                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019C                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  020D                     	;# 
   791  020E                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0291                     	;# 
   809  0291                     	;# 
   810  0292                     	;# 
   811  0293                     	;# 
   812  0294                     	;# 
   813  0295                     	;# 
   814  0295                     	;# 
   815  0296                     	;# 
   816  0298                     	;# 
   817  0298                     	;# 
   818  0299                     	;# 
   819  029A                     	;# 
   820  029B                     	;# 
   821  029C                     	;# 
   822  029D                     	;# 
   823  029E                     	;# 
   824  029E                     	;# 
   825  0311                     	;# 
   826  0311                     	;# 
   827  0312                     	;# 
   828  0313                     	;# 
   829  0318                     	;# 
   830  0318                     	;# 
   831  0319                     	;# 
   832  031A                     	;# 
   833  038C                     	;# 
   834  038D                     	;# 
   835  038E                     	;# 
   836  0391                     	;# 
   837  0392                     	;# 
   838  0393                     	;# 
   839  0394                     	;# 
   840  0395                     	;# 
   841  0396                     	;# 
   842  039A                     	;# 
   843  039C                     	;# 
   844  039D                     	;# 
   845  039E                     	;# 
   846  039F                     	;# 
   847  0415                     	;# 
   848  0416                     	;# 
   849  0417                     	;# 
   850  041C                     	;# 
   851  041D                     	;# 
   852  041E                     	;# 
   853  0FE4                     	;# 
   854  0FE5                     	;# 
   855  0FE6                     	;# 
   856  0FE7                     	;# 
   857  0FE8                     	;# 
   858  0FE9                     	;# 
   859  0FEA                     	;# 
   860  0FEB                     	;# 
   861  0FED                     	;# 
   862  0FEE                     	;# 
   863  0FEF                     	;# 
   864  0000                     	;# 
   865  0001                     	;# 
   866  0002                     	;# 
   867  0003                     	;# 
   868  0004                     	;# 
   869  0005                     	;# 
   870  0006                     	;# 
   871  0007                     	;# 
   872  0008                     	;# 
   873  0009                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  000E                     	;# 
   879  0011                     	;# 
   880  0012                     	;# 
   881  0013                     	;# 
   882  0015                     	;# 
   883  0016                     	;# 
   884  0016                     	;# 
   885  0017                     	;# 
   886  0018                     	;# 
   887  0019                     	;# 
   888  001A                     	;# 
   889  001B                     	;# 
   890  001C                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0095                     	;# 
   900  0096                     	;# 
   901  0097                     	;# 
   902  0098                     	;# 
   903  0099                     	;# 
   904  009A                     	;# 
   905  009B                     	;# 
   906  009B                     	;# 
   907  009C                     	;# 
   908  009D                     	;# 
   909  009E                     	;# 
   910  010C                     	;# 
   911  010D                     	;# 
   912  010E                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011A                     	;# 
   923  011B                     	;# 
   924  011D                     	;# 
   925  011E                     	;# 
   926  018C                     	;# 
   927  018D                     	;# 
   928  018E                     	;# 
   929  0191                     	;# 
   930  0191                     	;# 
   931  0192                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0193                     	;# 
   935  0194                     	;# 
   936  0195                     	;# 
   937  0196                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019C                     	;# 
   945  019C                     	;# 
   946  019D                     	;# 
   947  019E                     	;# 
   948  019F                     	;# 
   949  020C                     	;# 
   950  020D                     	;# 
   951  020E                     	;# 
   952  0211                     	;# 
   953  0211                     	;# 
   954  0212                     	;# 
   955  0212                     	;# 
   956  0213                     	;# 
   957  0213                     	;# 
   958  0214                     	;# 
   959  0214                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0216                     	;# 
   965  0216                     	;# 
   966  0217                     	;# 
   967  0217                     	;# 
   968  0291                     	;# 
   969  0291                     	;# 
   970  0292                     	;# 
   971  0293                     	;# 
   972  0294                     	;# 
   973  0295                     	;# 
   974  0295                     	;# 
   975  0296                     	;# 
   976  0298                     	;# 
   977  0298                     	;# 
   978  0299                     	;# 
   979  029A                     	;# 
   980  029B                     	;# 
   981  029C                     	;# 
   982  029D                     	;# 
   983  029E                     	;# 
   984  029E                     	;# 
   985  0311                     	;# 
   986  0311                     	;# 
   987  0312                     	;# 
   988  0313                     	;# 
   989  0318                     	;# 
   990  0318                     	;# 
   991  0319                     	;# 
   992  031A                     	;# 
   993  038C                     	;# 
   994  038D                     	;# 
   995  038E                     	;# 
   996  0391                     	;# 
   997  0392                     	;# 
   998  0393                     	;# 
   999  0394                     	;# 
  1000  0395                     	;# 
  1001  0396                     	;# 
  1002  039A                     	;# 
  1003  039C                     	;# 
  1004  039D                     	;# 
  1005  039E                     	;# 
  1006  039F                     	;# 
  1007  0415                     	;# 
  1008  0416                     	;# 
  1009  0417                     	;# 
  1010  041C                     	;# 
  1011  041D                     	;# 
  1012  041E                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024                           
  1025                           	psect	nvCOMMON
  1026  0075                     __pnvCOMMON:	
  1027  0075                     _TMR0_InterruptHandler:	
  1028  0075                     	ds	2
  1029  0077                     _eusartTxBufferRemaining:	
  1030  0077                     	ds	1
  1031  0078                     _timer0ReloadVal:	
  1032  0078                     	ds	1
  1033                           
  1034                           	psect	nvBANK0
  1035  0030                     __pnvBANK0:	
  1036  0030                     _EUSART_RxDefaultInterruptHandler:	
  1037  0030                     	ds	2
  1038  0032                     _EUSART_TxDefaultInterruptHandler:	
  1039  0032                     	ds	2
  1040  0015                     _TMR0	set	21
  1041  0011                     _PIR1bits	set	17
  1042  000B                     _INTCONbits	set	11
  1043  000D                     _PORTBbits	set	13
  1044  0095                     _OPTION_REG	set	149
  1045  0091                     _PIE1bits	set	145
  1046  0095                     _OPTION_REGbits	set	149
  1047  008E                     _TRISC	set	142
  1048  008D                     _TRISB	set	141
  1049  008C                     _TRISA	set	140
  1050  0097                     _WDTCON	set	151
  1051  0098                     _OSCTUNE	set	152
  1052  0099                     _OSCCON	set	153
  1053  011E                     _APFCON1	set	286
  1054  011D                     _APFCON0	set	285
  1055  010E                     _LATC	set	270
  1056  010D                     _LATB	set	269
  1057  010C                     _LATA	set	268
  1058  0116                     _BORCON	set	278
  1059  0199                     _RCREG	set	409
  1060  019D                     _RCSTAbits	set	413
  1061  019A                     _TXREG	set	410
  1062  019E                     _TXSTAbits	set	414
  1063  019C                     _SPBRGH	set	412
  1064  019B                     _SPBRGL	set	411
  1065  019E                     _TXSTA	set	414
  1066  019D                     _RCSTA	set	413
  1067  019F                     _BAUDCON	set	415
  1068  018C                     _ANSELA	set	396
  1069  018D                     _ANSELB	set	397
  1070  018E                     _ANSELC	set	398
  1071  020E                     _WPUC	set	526
  1072  020C                     _WPUA	set	524
  1073  020D                     _WPUB	set	525
  1074                           
  1075                           ; #config settings
  1076  0000                     
  1077                           	psect	cinit
  1078  0030                     start_initialization:	
  1079  0030                     __initialization:	
  1080                           
  1081                           ; Clear objects allocated to COMMON
  1082  0030  01F0               	clrf	__pbssCOMMON& (0+127)
  1083  0031  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1084  0032  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1085  0033  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1086  0034  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1087                           
  1088                           ; Clear objects allocated to BANK0
  1089  0035  3020               	movlw	low __pbssBANK0
  1090  0036  0084               	movwf	4
  1091  0037  3000               	movlw	high __pbssBANK0
  1092  0038  0085               	movwf	5
  1093  0039  3010               	movlw	16
  1094  003A  3180  20F5         	fcall	clear_ram0
  1095  003C                     end_of_initialization:	
  1096                           ;End of C runtime variable initialization code
  1097                           
  1098  003C                     __end_of__initialization:	
  1099  003C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1100  003D  0020               	movlb	0
  1101  003E  3180  28FB         	ljmp	_main	;jump to C main() function
  1102                           
  1103                           	psect	bssCOMMON
  1104  0070                     __pbssCOMMON:	
  1105  0070                     _eusartRxCount:	
  1106  0070                     	ds	1
  1107  0071                     _eusartRxTail:	
  1108  0071                     	ds	1
  1109  0072                     _eusartRxHead:	
  1110  0072                     	ds	1
  1111  0073                     _eusartTxTail:	
  1112  0073                     	ds	1
  1113  0074                     _eusartTxHead:	
  1114  0074                     	ds	1
  1115                           
  1116                           	psect	bssBANK0
  1117  0020                     __pbssBANK0:	
  1118  0020                     _eusartRxBuffer:	
  1119  0020                     	ds	8
  1120  0028                     _eusartTxBuffer:	
  1121  0028                     	ds	8
  1122                           
  1123                           	psect	clrtext
  1124  00F5                     clear_ram0:	
  1125                           ;	Called with FSR0 containing the base address, and
  1126                           ;	WREG with the size to clear
  1127                           
  1128  00F5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1129  00F6                     clrloop0:	
  1130  00F6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1131  00F7  3101               	addfsr 0,1
  1132  00F8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1133  00F9  28F6               	goto	clrloop0	;have we reached the end yet?
  1134  00FA  3400               	retlw	0	;all done for this memory range, return
  1135                           
  1136                           	psect	cstackCOMMON
  1137  0079                     __pcstackCOMMON:	
  1138  0079                     ?_PIN_MANAGER_Initialize:	
  1139  0079                     ?_OSCILLATOR_Initialize:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0079                     ?_WDT_Initialize:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0079                     ?_TMR0_Initialize:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0079                     ?_EUSART_Initialize:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0079                     ?_TMR0_ISR:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0079                     ??_TMR0_ISR:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0079                     ?_TMR0_DefaultInterruptHandler:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0079                     ??_TMR0_DefaultInterruptHandler:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0079                     ?_TMR0_CallBack:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0079                     ??_TMR0_CallBack:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0079                     ?_EUSART_Receive_ISR:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0079                     ??_EUSART_Receive_ISR:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0079                     ?_EUSART_Transmit_ISR:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0079                     ??_EUSART_Transmit_ISR:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0079                     ?_SYSTEM_Initialize:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0079                     ?_INTERRUPT_InterruptManager:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0079                     ?_main:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x0
  1192  0079                     	ds	1
  1193  007A                     ??_INTERRUPT_InterruptManager:	
  1194                           
  1195                           ; 1 bytes @ 0x1
  1196  007A                     	ds	1
  1197  007B                     ??_PIN_MANAGER_Initialize:	
  1198  007B                     ??_OSCILLATOR_Initialize:	
  1199                           ; 1 bytes @ 0x2
  1200                           
  1201  007B                     ??_WDT_Initialize:	
  1202                           ; 1 bytes @ 0x2
  1203                           
  1204  007B                     ??_TMR0_Initialize:	
  1205                           ; 1 bytes @ 0x2
  1206                           
  1207  007B                     ??_EUSART_Initialize:	
  1208                           ; 1 bytes @ 0x2
  1209                           
  1210  007B                     ??_TMR0_SetInterruptHandler:	
  1211                           ; 1 bytes @ 0x2
  1212                           
  1213  007B                     ??_EUSART_SetRxInterruptHandler:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216  007B                     ??_EUSART_SetTxInterruptHandler:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0x2
  1221  007B                     	ds	1
  1222  007C                     ??_SYSTEM_Initialize:	
  1223  007C                     ??_main:	
  1224                           ; 1 bytes @ 0x3
  1225                           
  1226                           
  1227                           	psect	cstackBANK0
  1228  0034                     __pcstackBANK0:	
  1229                           ; 1 bytes @ 0x3
  1230                           
  1231  0034                     ?_TMR0_SetInterruptHandler:	
  1232  0034                     ?_EUSART_SetRxInterruptHandler:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0034                     ?_EUSART_SetTxInterruptHandler:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0034                     TMR0_SetInterruptHandler@InterruptHandler:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0034                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1242                           ; 2 bytes @ 0x0
  1243                           
  1244  0034                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1245                           ; 2 bytes @ 0x0
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0x0
  1249  0034                     	ds	2
  1250                           
  1251                           	psect	maintext
  1252  00FB                     __pmaintext:	
  1253 ;;
  1254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1255 ;;
  1256 ;; *************** function _main *****************
  1257 ;; Defined at:
  1258 ;;		line 49 in file "main.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : B1F/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1272 ;;      Params:         0       0       0       0
  1273 ;;      Locals:         0       0       0       0
  1274 ;;      Temps:          0       0       0       0
  1275 ;;      Totals:         0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels required when called:    7
  1278 ;; This function calls:
  1279 ;;		_SYSTEM_Initialize
  1280 ;; This function is called by:
  1281 ;;		Startup code after reset
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _main
  1287  00FB                     _main:	
  1288                           
  1289                           ;main.c: 52: SYSTEM_Initialize();
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1293  00FB  3180  20CE  3180   	fcall	_SYSTEM_Initialize
  1294                           
  1295                           ;main.c: 58: (INTCONbits.GIE = 1);
  1296  00FE  178B               	bsf	11,7	;volatile
  1297                           
  1298                           ;main.c: 61: (INTCONbits.PEIE = 1);
  1299  00FF  170B               	bsf	11,6	;volatile
  1300  0100                     l151:	
  1301                           ;main.c: 69: while (1)
  1302                           
  1303                           
  1304                           ;main.c: 70: {
  1305  0100  2900               	goto	l151
  1306  0101                     __end_of_main:	
  1307                           
  1308                           	psect	text1
  1309  00CE                     __ptext1:	
  1310 ;; *************** function _SYSTEM_Initialize *****************
  1311 ;; Defined at:
  1312 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1326 ;;      Params:         0       0       0       0
  1327 ;;      Locals:         0       0       0       0
  1328 ;;      Temps:          0       0       0       0
  1329 ;;      Totals:         0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    6
  1333 ;; This function calls:
  1334 ;;		_EUSART_Initialize
  1335 ;;		_OSCILLATOR_Initialize
  1336 ;;		_PIN_MANAGER_Initialize
  1337 ;;		_TMR0_Initialize
  1338 ;;		_WDT_Initialize
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _SYSTEM_Initialize
  1346  00CE                     _SYSTEM_Initialize:	
  1347                           
  1348                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  1349                           
  1350                           ;incstack = 0
  1351                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1352  00CE  3180  2085  3180   	fcall	_PIN_MANAGER_Initialize
  1353                           
  1354                           ;mcc.c: 53: OSCILLATOR_Initialize();
  1355  00D1  3180  20E7  3180   	fcall	_OSCILLATOR_Initialize
  1356                           
  1357                           ;mcc.c: 54: WDT_Initialize();
  1358  00D4  3181  2113  3180   	fcall	_WDT_Initialize
  1359                           
  1360                           ;mcc.c: 55: TMR0_Initialize();
  1361  00D7  3180  20B9  3180   	fcall	_TMR0_Initialize
  1362                           
  1363                           ;mcc.c: 56: EUSART_Initialize();
  1364  00DA  3180  2040         	fcall	_EUSART_Initialize
  1365  00DC  0008               	return
  1366  00DD                     __end_of_SYSTEM_Initialize:	
  1367                           
  1368                           	psect	text2
  1369  0113                     __ptext2:	
  1370 ;; *************** function _WDT_Initialize *****************
  1371 ;; Defined at:
  1372 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1386 ;;      Params:         0       0       0       0
  1387 ;;      Locals:         0       0       0       0
  1388 ;;      Temps:          0       0       0       0
  1389 ;;      Totals:         0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    4
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_SYSTEM_Initialize
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _WDT_Initialize
  1402  0113                     _WDT_Initialize:	
  1403                           
  1404                           ;mcc.c: 72: WDTCON = 0x16;
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _WDT_Initialize: [wreg]
  1408  0113  3016               	movlw	22
  1409  0114  0021               	movlb	1	; select bank1
  1410  0115  0097               	movwf	23	;volatile
  1411  0116  0008               	return
  1412  0117                     __end_of_WDT_Initialize:	
  1413                           
  1414                           	psect	text3
  1415  00B9                     __ptext3:	
  1416 ;; *************** function _TMR0_Initialize *****************
  1417 ;; Defined at:
  1418 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1432 ;;      Params:         0       0       0       0
  1433 ;;      Locals:         0       0       0       0
  1434 ;;      Temps:          1       0       0       0
  1435 ;;      Totals:         1       0       0       0
  1436 ;;Total ram usage:        1 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    5
  1439 ;; This function calls:
  1440 ;;		_TMR0_SetInterruptHandler
  1441 ;; This function is called by:
  1442 ;;		_SYSTEM_Initialize
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _TMR0_Initialize
  1448  00B9                     _TMR0_Initialize:	
  1449                           
  1450                           ;tmr0.c: 69: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1454  00B9  0021               	movlb	1	; select bank1
  1455  00BA  0815               	movf	21,w	;volatile
  1456  00BB  39C0               	andlw	192
  1457  00BC  3817               	iorlw	23
  1458  00BD  0095               	movwf	21	;volatile
  1459                           
  1460                           ;tmr0.c: 72: TMR0 = 0xF0;
  1461  00BE  30F0               	movlw	240
  1462  00BF  0020               	movlb	0	; select bank0
  1463  00C0  0095               	movwf	21	;volatile
  1464                           
  1465                           ;tmr0.c: 75: timer0ReloadVal= 240;
  1466  00C1  30F0               	movlw	240
  1467  00C2  00FB               	movwf	??_TMR0_Initialize
  1468  00C3  087B               	movf	??_TMR0_Initialize,w
  1469  00C4  00F8               	movwf	_timer0ReloadVal	;volatile
  1470                           
  1471                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  1472  00C5  110B               	bcf	11,2	;volatile
  1473                           
  1474                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  1475  00C6  168B               	bsf	11,5	;volatile
  1476                           
  1477                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1478  00C7  3017               	movlw	low _TMR0_DefaultInterruptHandler
  1479  00C8  00B4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1480  00C9  3001               	movlw	high _TMR0_DefaultInterruptHandler
  1481  00CA  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1482  00CB  3181  2101         	fcall	_TMR0_SetInterruptHandler
  1483  00CD  0008               	return
  1484  00CE                     __end_of_TMR0_Initialize:	
  1485                           
  1486                           	psect	text4
  1487  0101                     __ptext4:	
  1488 ;; *************** function _TMR0_SetInterruptHandler *****************
  1489 ;; Defined at:
  1490 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1493 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1505 ;;      Params:         0       2       0       0
  1506 ;;      Locals:         0       0       0       0
  1507 ;;      Temps:          0       0       0       0
  1508 ;;      Totals:         0       2       0       0
  1509 ;;Total ram usage:        2 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    4
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_TMR0_Initialize
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _TMR0_SetInterruptHandler
  1521  0101                     _TMR0_SetInterruptHandler:	
  1522                           
  1523                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  1524                           
  1525                           ;incstack = 0
  1526                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1527  0101  0020               	movlb	0	; select bank0
  1528  0102  0835               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1529  0103  00F6               	movwf	_TMR0_InterruptHandler+1
  1530  0104  0834               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1531  0105  00F5               	movwf	_TMR0_InterruptHandler
  1532  0106  0008               	return
  1533  0107                     __end_of_TMR0_SetInterruptHandler:	
  1534                           
  1535                           	psect	text5
  1536  0085                     __ptext5:	
  1537 ;; *************** function _PIN_MANAGER_Initialize *****************
  1538 ;; Defined at:
  1539 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1553 ;;      Params:         0       0       0       0
  1554 ;;      Locals:         0       0       0       0
  1555 ;;      Temps:          0       0       0       0
  1556 ;;      Totals:         0       0       0       0
  1557 ;;Total ram usage:        0 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    4
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_SYSTEM_Initialize
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _PIN_MANAGER_Initialize
  1569  0085                     _PIN_MANAGER_Initialize:	
  1570                           
  1571                           ;pin_manager.c: 62: LATA = 0x04;
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1575  0085  3004               	movlw	4
  1576  0086  0022               	movlb	2	; select bank2
  1577  0087  008C               	movwf	12	;volatile
  1578                           
  1579                           ;pin_manager.c: 63: LATB = 0x00;
  1580  0088  018D               	clrf	13	;volatile
  1581                           
  1582                           ;pin_manager.c: 64: LATC = 0x00;
  1583  0089  018E               	clrf	14	;volatile
  1584                           
  1585                           ;pin_manager.c: 69: TRISA = 0x3B;
  1586  008A  303B               	movlw	59
  1587  008B  0021               	movlb	1	; select bank1
  1588  008C  008C               	movwf	12	;volatile
  1589                           
  1590                           ;pin_manager.c: 70: TRISB = 0xF0;
  1591  008D  30F0               	movlw	240
  1592  008E  008D               	movwf	13	;volatile
  1593                           
  1594                           ;pin_manager.c: 71: TRISC = 0x00;
  1595  008F  018E               	clrf	14	;volatile
  1596                           
  1597                           ;pin_manager.c: 76: ANSELC = 0x00;
  1598  0090  0023               	movlb	3	; select bank3
  1599  0091  018E               	clrf	14	;volatile
  1600                           
  1601                           ;pin_manager.c: 77: ANSELB = 0x00;
  1602  0092  018D               	clrf	13	;volatile
  1603                           
  1604                           ;pin_manager.c: 78: ANSELA = 0x13;
  1605  0093  3013               	movlw	19
  1606  0094  008C               	movwf	12	;volatile
  1607                           
  1608                           ;pin_manager.c: 83: WPUB = 0x00;
  1609  0095  0024               	movlb	4	; select bank4
  1610  0096  018D               	clrf	13	;volatile
  1611                           
  1612                           ;pin_manager.c: 84: WPUA = 0x00;
  1613  0097  018C               	clrf	12	;volatile
  1614                           
  1615                           ;pin_manager.c: 85: WPUC = 0x00;
  1616  0098  018E               	clrf	14	;volatile
  1617                           
  1618                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 1;
  1619  0099  0021               	movlb	1	; select bank1
  1620  009A  1795               	bsf	21,7	;volatile
  1621                           
  1622                           ;pin_manager.c: 95: APFCON0 = 0x00;
  1623  009B  0022               	movlb	2	; select bank2
  1624  009C  019D               	clrf	29	;volatile
  1625                           
  1626                           ;pin_manager.c: 96: APFCON1 = 0x00;
  1627  009D  019E               	clrf	30	;volatile
  1628  009E  0008               	return
  1629  009F                     __end_of_PIN_MANAGER_Initialize:	
  1630                           
  1631                           	psect	text6
  1632  00E7                     __ptext6:	
  1633 ;; *************** function _OSCILLATOR_Initialize *****************
  1634 ;; Defined at:
  1635 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1649 ;;      Params:         0       0       0       0
  1650 ;;      Locals:         0       0       0       0
  1651 ;;      Temps:          0       0       0       0
  1652 ;;      Totals:         0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    4
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_SYSTEM_Initialize
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _OSCILLATOR_Initialize
  1665  00E7                     _OSCILLATOR_Initialize:	
  1666                           
  1667                           ;mcc.c: 62: OSCCON = 0x7A;
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1671  00E7  307A               	movlw	122
  1672  00E8  0021               	movlb	1	; select bank1
  1673  00E9  0099               	movwf	25	;volatile
  1674                           
  1675                           ;mcc.c: 64: OSCTUNE = 0x00;
  1676  00EA  0198               	clrf	24	;volatile
  1677                           
  1678                           ;mcc.c: 66: BORCON = 0x00;
  1679  00EB  0022               	movlb	2	; select bank2
  1680  00EC  0196               	clrf	22	;volatile
  1681  00ED  0008               	return
  1682  00EE                     __end_of_OSCILLATOR_Initialize:	
  1683                           
  1684                           	psect	text7
  1685  0040                     __ptext7:	
  1686 ;; *************** function _EUSART_Initialize *****************
  1687 ;; Defined at:
  1688 ;;		line 75 in file "mcc_generated_files/eusart.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1702 ;;      Params:         0       0       0       0
  1703 ;;      Locals:         0       0       0       0
  1704 ;;      Temps:          1       0       0       0
  1705 ;;      Totals:         1       0       0       0
  1706 ;;Total ram usage:        1 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    5
  1709 ;; This function calls:
  1710 ;;		_EUSART_SetRxInterruptHandler
  1711 ;;		_EUSART_SetTxInterruptHandler
  1712 ;; This function is called by:
  1713 ;;		_SYSTEM_Initialize
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _EUSART_Initialize
  1719  0040                     _EUSART_Initialize:	
  1720                           
  1721                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1725  0040  0021               	movlb	1	; select bank1
  1726  0041  1291               	bcf	17,5	;volatile
  1727                           
  1728                           ;eusart.c: 79: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1729  0042  309F               	movlw	low _EUSART_Receive_ISR
  1730  0043  0020               	movlb	0	; select bank0
  1731  0044  00B4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  1732  0045  3000               	movlw	high _EUSART_Receive_ISR
  1733  0046  00B5               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  1734  0047  3181  210D  3180   	fcall	_EUSART_SetRxInterruptHandler
  1735                           
  1736                           ;eusart.c: 80: PIE1bits.TXIE = 0;
  1737  004A  0021               	movlb	1	; select bank1
  1738  004B  1211               	bcf	17,4	;volatile
  1739                           
  1740                           ;eusart.c: 81: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  1741  004C  306A               	movlw	low _EUSART_Transmit_ISR
  1742  004D  0020               	movlb	0	; select bank0
  1743  004E  00B4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  1744  004F  3000               	movlw	high _EUSART_Transmit_ISR
  1745  0050  00B5               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  1746  0051  3181  2107         	fcall	_EUSART_SetTxInterruptHandler
  1747                           
  1748                           ;eusart.c: 85: BAUDCON = 0x08;
  1749  0053  3008               	movlw	8
  1750  0054  0023               	movlb	3	; select bank3
  1751  0055  009F               	movwf	31	;volatile
  1752                           
  1753                           ;eusart.c: 88: RCSTA = 0x90;
  1754  0056  3090               	movlw	144
  1755  0057  009D               	movwf	29	;volatile
  1756                           
  1757                           ;eusart.c: 91: TXSTA = 0x24;
  1758  0058  3024               	movlw	36
  1759  0059  009E               	movwf	30	;volatile
  1760                           
  1761                           ;eusart.c: 94: SPBRGL = 0xA0;
  1762  005A  30A0               	movlw	160
  1763  005B  009B               	movwf	27	;volatile
  1764                           
  1765                           ;eusart.c: 97: SPBRGH = 0x01;
  1766  005C  3001               	movlw	1
  1767  005D  009C               	movwf	28	;volatile
  1768                           
  1769                           ;eusart.c: 101: eusartTxHead = 0;
  1770  005E  01F4               	clrf	_eusartTxHead	;volatile
  1771                           
  1772                           ;eusart.c: 102: eusartTxTail = 0;
  1773  005F  01F3               	clrf	_eusartTxTail	;volatile
  1774                           
  1775                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  1776  0060  3008               	movlw	8
  1777  0061  00FB               	movwf	??_EUSART_Initialize
  1778  0062  087B               	movf	??_EUSART_Initialize,w
  1779  0063  00F7               	movwf	_eusartTxBufferRemaining	;volatile
  1780                           
  1781                           ;eusart.c: 105: eusartRxHead = 0;
  1782  0064  01F2               	clrf	_eusartRxHead	;volatile
  1783                           
  1784                           ;eusart.c: 106: eusartRxTail = 0;
  1785  0065  01F1               	clrf	_eusartRxTail	;volatile
  1786                           
  1787                           ;eusart.c: 107: eusartRxCount = 0;
  1788  0066  01F0               	clrf	_eusartRxCount	;volatile
  1789                           
  1790                           ;eusart.c: 110: PIE1bits.RCIE = 1;
  1791  0067  0021               	movlb	1	; select bank1
  1792  0068  1691               	bsf	17,5	;volatile
  1793  0069  0008               	return
  1794  006A                     __end_of_EUSART_Initialize:	
  1795                           
  1796                           	psect	text8
  1797  0107                     __ptext8:	
  1798 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  1799 ;; Defined at:
  1800 ;;		line 220 in file "mcc_generated_files/eusart.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1803 ;;		 -> EUSART_Transmit_ISR(1), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1815 ;;      Params:         0       2       0       0
  1816 ;;      Locals:         0       0       0       0
  1817 ;;      Temps:          0       0       0       0
  1818 ;;      Totals:         0       2       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    4
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_EUSART_Initialize
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _EUSART_SetTxInterruptHandler
  1831  0107                     _EUSART_SetTxInterruptHandler:	
  1832                           
  1833                           ;eusart.c: 221: EUSART_TxDefaultInterruptHandler = interruptHandler;
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  1837  0107  0020               	movlb	0	; select bank0
  1838  0108  0835               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  1839  0109  00B3               	movwf	_EUSART_TxDefaultInterruptHandler+1
  1840  010A  0834               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  1841  010B  00B2               	movwf	_EUSART_TxDefaultInterruptHandler
  1842  010C  0008               	return
  1843  010D                     __end_of_EUSART_SetTxInterruptHandler:	
  1844                           
  1845                           	psect	text9
  1846  010D                     __ptext9:	
  1847 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  1848 ;; Defined at:
  1849 ;;		line 224 in file "mcc_generated_files/eusart.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1852 ;;		 -> EUSART_Receive_ISR(1), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1864 ;;      Params:         0       2       0       0
  1865 ;;      Locals:         0       0       0       0
  1866 ;;      Temps:          0       0       0       0
  1867 ;;      Totals:         0       2       0       0
  1868 ;;Total ram usage:        2 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    4
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_EUSART_Initialize
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _EUSART_SetRxInterruptHandler
  1880  010D                     _EUSART_SetRxInterruptHandler:	
  1881                           
  1882                           ;eusart.c: 225: EUSART_RxDefaultInterruptHandler = interruptHandler;
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  1886  010D  0020               	movlb	0	; select bank0
  1887  010E  0835               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  1888  010F  00B1               	movwf	_EUSART_RxDefaultInterruptHandler+1
  1889  0110  0834               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  1890  0111  00B0               	movwf	_EUSART_RxDefaultInterruptHandler
  1891  0112  0008               	return
  1892  0113                     __end_of_EUSART_SetRxInterruptHandler:	
  1893                           
  1894                           	psect	intentry
  1895  0004                     __pintentry:	
  1896 ;; *************** function _INTERRUPT_InterruptManager *****************
  1897 ;; Defined at:
  1898 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1912 ;;      Params:         0       0       0       0
  1913 ;;      Locals:         0       0       0       0
  1914 ;;      Temps:          1       0       0       0
  1915 ;;      Totals:         1       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		Absolute function
  1921 ;;		_EUSART_Receive_ISR
  1922 ;;		_EUSART_Transmit_ISR
  1923 ;;		_TMR0_ISR
  1924 ;; This function is called by:
  1925 ;;		Interrupt level 1
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929  0004                     _INTERRUPT_InterruptManager:	
  1930                           
  1931                           ;incstack = 0
  1932  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1933                           
  1934                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  1935  0005  3180               	pagesel	$
  1936  0006  0020               	movlb	0	; select bank0
  1937  0007  087F               	movf	127,w
  1938  0008  00FA               	movwf	??_INTERRUPT_InterruptManager
  1939                           
  1940                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1941  0009  1A8B               	btfsc	11,5	;volatile
  1942  000A  1D0B               	btfss	11,2	;volatile
  1943  000B  2810               	goto	i1l89
  1944                           
  1945                           ;interrupt_manager.c: 56: {
  1946                           ;interrupt_manager.c: 57: TMR0_ISR();
  1947  000C  3180  20EE  3180   	fcall	_TMR0_ISR
  1948                           
  1949                           ;interrupt_manager.c: 58: }
  1950  000F  2829               	goto	i1l97
  1951  0010                     i1l89:	
  1952                           
  1953                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  1954  0010  1F0B               	btfss	11,6	;volatile
  1955  0011  2829               	goto	i1l97
  1956                           
  1957                           ;interrupt_manager.c: 60: {
  1958                           ;interrupt_manager.c: 61: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  1959  0012  0021               	movlb	1	; select bank1
  1960  0013  1E11               	btfss	17,4	;volatile
  1961  0014  281E               	goto	i1l92
  1962  0015  0020               	movlb	0	; select bank0
  1963  0016  1E11               	btfss	17,4	;volatile
  1964  0017  281E               	goto	i1l92
  1965                           
  1966                           ;interrupt_manager.c: 62: {
  1967                           ;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
  1968  0018  0833               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  1969  0019  008A               	movwf	10
  1970  001A  0832               	movf	_EUSART_TxDefaultInterruptHandler,w
  1971  001B  000A               	callw
  1972  001C  3180               	pagesel	$
  1973                           
  1974                           ;interrupt_manager.c: 64: }
  1975  001D  2829               	goto	i1l97
  1976  001E                     i1l92:	
  1977                           
  1978                           ;interrupt_manager.c: 65: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  1979  001E  0021               	movlb	1	; select bank1
  1980  001F  1E91               	btfss	17,5	;volatile
  1981  0020  2829               	goto	i1l97
  1982  0021  0020               	movlb	0	; select bank0
  1983  0022  1E91               	btfss	17,5	;volatile
  1984  0023  2829               	goto	i1l97
  1985                           
  1986                           ;interrupt_manager.c: 66: {
  1987                           ;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
  1988  0024  0831               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  1989  0025  008A               	movwf	10
  1990  0026  0830               	movf	_EUSART_RxDefaultInterruptHandler,w
  1991  0027  000A               	callw
  1992  0028  3180               	pagesel	$
  1993  0029                     i1l97:	
  1994                           ;interrupt_manager.c: 74: else
  1995                           ;interrupt_manager.c: 75: {
  1996                           
  1997                           ;interrupt_manager.c: 72: }
  1998                           ;interrupt_manager.c: 73: }
  1999                           
  2000                           ;interrupt_manager.c: 69: else
  2001                           ;interrupt_manager.c: 70: {
  2002                           
  2003                           ;interrupt_manager.c: 68: }
  2004                           
  2005  0029  087A               	movf	??_INTERRUPT_InterruptManager,w
  2006  002A  0020               	movlb	0	; select bank0
  2007  002B  00FF               	movwf	127
  2008  002C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2009  002D  0009               	retfie
  2010  002E                     __end_of_INTERRUPT_InterruptManager:	
  2011                           
  2012                           	psect	text11
  2013  00EE                     __ptext11:	
  2014 ;; *************** function _TMR0_ISR *****************
  2015 ;; Defined at:
  2016 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2030 ;;      Params:         0       0       0       0
  2031 ;;      Locals:         0       0       0       0
  2032 ;;      Temps:          0       0       0       0
  2033 ;;      Totals:         0       0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		_TMR0_CallBack
  2039 ;; This function is called by:
  2040 ;;		_INTERRUPT_InterruptManager
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _TMR0_ISR
  2046  00EE                     _TMR0_ISR:	
  2047                           
  2048                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2052  00EE  110B               	bcf	11,2	;volatile
  2053                           
  2054                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  2055  00EF  0878               	movf	_timer0ReloadVal,w	;volatile
  2056  00F0  0020               	movlb	0	; select bank0
  2057  00F1  0095               	movwf	21	;volatile
  2058                           
  2059                           ;tmr0.c: 118: TMR0_CallBack();
  2060  00F2  3180  20DD         	fcall	_TMR0_CallBack
  2061  00F4  0008               	return
  2062  00F5                     __end_of_TMR0_ISR:	
  2063                           
  2064                           	psect	text12
  2065  00DD                     __ptext12:	
  2066 ;; *************** function _TMR0_CallBack *****************
  2067 ;; Defined at:
  2068 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2082 ;;      Params:         0       0       0       0
  2083 ;;      Locals:         0       0       0       0
  2084 ;;      Temps:          0       0       0       0
  2085 ;;      Totals:         0       0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    1
  2089 ;; This function calls:
  2090 ;;		Absolute function
  2091 ;;		_TMR0_DefaultInterruptHandler
  2092 ;; This function is called by:
  2093 ;;		_TMR0_ISR
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _TMR0_CallBack
  2099  00DD                     _TMR0_CallBack:	
  2100                           
  2101                           ;tmr0.c: 127: if(TMR0_InterruptHandler)
  2102                           
  2103                           ;incstack = 0
  2104                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2105  00DD  0875               	movf	_TMR0_InterruptHandler,w
  2106  00DE  0476               	iorwf	_TMR0_InterruptHandler+1,w
  2107  00DF  1903               	btfsc	3,2
  2108  00E0  0008               	return
  2109                           
  2110                           ;tmr0.c: 128: {
  2111                           ;tmr0.c: 129: TMR0_InterruptHandler();
  2112  00E1  0876               	movf	_TMR0_InterruptHandler+1,w
  2113  00E2  008A               	movwf	10
  2114  00E3  0875               	movf	_TMR0_InterruptHandler,w
  2115  00E4  000A               	callw
  2116  00E5  3180               	pagesel	$
  2117  00E6  0008               	return
  2118  00E7                     __end_of_TMR0_CallBack:	
  2119                           
  2120                           	psect	text13
  2121  0117                     __ptext13:	
  2122 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2123 ;; Defined at:
  2124 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		None
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2138 ;;      Params:         0       0       0       0
  2139 ;;      Locals:         0       0       0       0
  2140 ;;      Temps:          0       0       0       0
  2141 ;;      Totals:         0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_TMR0_Initialize
  2148 ;;		_TMR0_CallBack
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _TMR0_DefaultInterruptHandler
  2154  0117                     _TMR0_DefaultInterruptHandler:	
  2155                           
  2156                           ;incstack = 0
  2157                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  2158  0117  0008               	return
  2159  0118                     __end_of_TMR0_DefaultInterruptHandler:	
  2160                           
  2161                           	psect	text14
  2162  006A                     __ptext14:	
  2163 ;; *************** function _EUSART_Transmit_ISR *****************
  2164 ;; Defined at:
  2165 ;;		line 181 in file "mcc_generated_files/eusart.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2179 ;;      Params:         0       0       0       0
  2180 ;;      Locals:         0       0       0       0
  2181 ;;      Temps:          1       0       0       0
  2182 ;;      Totals:         1       0       0       0
  2183 ;;Total ram usage:        1 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_EUSART_Initialize
  2189 ;;		_INTERRUPT_InterruptManager
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _EUSART_Transmit_ISR
  2195  006A                     _EUSART_Transmit_ISR:	
  2196                           
  2197                           ;eusart.c: 185: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2201  006A  3008               	movlw	8
  2202  006B  0277               	subwf	_eusartTxBufferRemaining,w	;volatile
  2203  006C  1803               	skipnc
  2204  006D  2882               	goto	i1l239
  2205                           
  2206                           ;eusart.c: 186: {
  2207                           ;eusart.c: 187: TXREG = eusartTxBuffer[eusartTxTail++];
  2208  006E  0873               	movf	_eusartTxTail,w
  2209  006F  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2210  0070  0086               	movwf	6
  2211  0071  0187               	clrf	7
  2212  0072  0801               	movf	1,w
  2213  0073  0023               	movlb	3	; select bank3
  2214  0074  009A               	movwf	26	;volatile
  2215  0075  3001               	movlw	1
  2216  0076  00F9               	movwf	??_EUSART_Transmit_ISR
  2217  0077  0879               	movf	??_EUSART_Transmit_ISR,w
  2218  0078  07F3               	addwf	_eusartTxTail,f	;volatile
  2219                           
  2220                           ;eusart.c: 188: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2221  0079  3008               	movlw	8
  2222  007A  0273               	subwf	_eusartTxTail,w	;volatile
  2223  007B  1803               	btfsc	3,0
  2224                           
  2225                           ;eusart.c: 189: {
  2226                           ;eusart.c: 190: eusartTxTail = 0;
  2227  007C  01F3               	clrf	_eusartTxTail	;volatile
  2228                           
  2229                           ;eusart.c: 191: }
  2230                           ;eusart.c: 192: eusartTxBufferRemaining++;
  2231  007D  3001               	movlw	1
  2232  007E  00F9               	movwf	??_EUSART_Transmit_ISR
  2233  007F  0879               	movf	??_EUSART_Transmit_ISR,w
  2234  0080  07F7               	addwf	_eusartTxBufferRemaining,f	;volatile
  2235                           
  2236                           ;eusart.c: 193: }
  2237  0081  0008               	return
  2238  0082                     i1l239:	
  2239                           
  2240                           ;eusart.c: 194: else
  2241                           ;eusart.c: 195: {
  2242                           ;eusart.c: 196: PIE1bits.TXIE = 0;
  2243  0082  0021               	movlb	1	; select bank1
  2244  0083  1211               	bcf	17,4	;volatile
  2245  0084  0008               	return
  2246  0085                     __end_of_EUSART_Transmit_ISR:	
  2247                           
  2248                           	psect	text15
  2249  009F                     __ptext15:	
  2250 ;; *************** function _EUSART_Receive_ISR *****************
  2251 ;; Defined at:
  2252 ;;		line 200 in file "mcc_generated_files/eusart.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2266 ;;      Params:         0       0       0       0
  2267 ;;      Locals:         0       0       0       0
  2268 ;;      Temps:          1       0       0       0
  2269 ;;      Totals:         1       0       0       0
  2270 ;;Total ram usage:        1 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_EUSART_Initialize
  2276 ;;		_INTERRUPT_InterruptManager
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _EUSART_Receive_ISR
  2282  009F                     _EUSART_Receive_ISR:	
  2283                           
  2284                           ;eusart.c: 203: if(1 == RCSTAbits.OERR)
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2288  009F  0023               	movlb	3	; select bank3
  2289  00A0  1C9D               	btfss	29,1	;volatile
  2290  00A1  28A4               	goto	i1l1029
  2291                           
  2292                           ;eusart.c: 204: {
  2293                           ;eusart.c: 207: RCSTAbits.CREN = 0;
  2294  00A2  121D               	bcf	29,4	;volatile
  2295                           
  2296                           ;eusart.c: 208: RCSTAbits.CREN = 1;
  2297  00A3  161D               	bsf	29,4	;volatile
  2298  00A4                     i1l1029:	
  2299                           
  2300                           ;eusart.c: 209: }
  2301                           ;eusart.c: 212: eusartRxBuffer[eusartRxHead++] = RCREG;
  2302  00A4  0819               	movf	25,w	;volatile
  2303  00A5  00F9               	movwf	??_EUSART_Receive_ISR
  2304  00A6  0872               	movf	_eusartRxHead,w
  2305  00A7  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2306  00A8  0086               	movwf	6
  2307  00A9  0187               	clrf	7
  2308  00AA  0879               	movf	??_EUSART_Receive_ISR,w
  2309  00AB  0081               	movwf	1
  2310  00AC  3001               	movlw	1
  2311  00AD  00F9               	movwf	??_EUSART_Receive_ISR
  2312  00AE  0879               	movf	??_EUSART_Receive_ISR,w
  2313  00AF  07F2               	addwf	_eusartRxHead,f	;volatile
  2314                           
  2315                           ;eusart.c: 213: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2316  00B0  3008               	movlw	8
  2317  00B1  0272               	subwf	_eusartRxHead,w	;volatile
  2318  00B2  1803               	btfsc	3,0
  2319                           
  2320                           ;eusart.c: 214: {
  2321                           ;eusart.c: 215: eusartRxHead = 0;
  2322  00B3  01F2               	clrf	_eusartRxHead	;volatile
  2323                           
  2324                           ;eusart.c: 216: }
  2325                           ;eusart.c: 217: eusartRxCount++;
  2326  00B4  3001               	movlw	1
  2327  00B5  00F9               	movwf	??_EUSART_Receive_ISR
  2328  00B6  0879               	movf	??_EUSART_Receive_ISR,w
  2329  00B7  07F0               	addwf	_eusartRxCount,f	;volatile
  2330  00B8  0008               	return
  2331  00B9                     __end_of_EUSART_Receive_ISR:	
  2332  007E                     btemp	set	126	;btemp
  2333  007E                     int$flags	set	126
  2334  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2      22
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     288
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     288
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      96
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     192
                                              2 COMMON     1     1      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      22       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      16       6       27.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      22      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 11 17:27:02 2018

               ?_EUSART_SetRxInterruptHandler 0034                                   __CFG_CP$OFF 0000  
                             _timer0ReloadVal 0078                                   __CFG_LVP$ON 0000  
                                         l151 0100                                  __CFG_CPD$OFF 0000  
                                __CFG_BORV$LO 0000                                           wreg 0009  
                                __CFG_IESO$ON 0000                                          _LATA 010C  
                                        _LATB 010D                                          _LATC 010E  
                                        i1l92 001E                                          i1l97 0029  
                                        i1l89 0010                                          _TMR0 0015  
                                        _WPUA 020C                                          _WPUB 020D  
                                        _WPUC 020E                                  __CFG_WRT$OFF 0000  
                               __CFG_FCMEN$ON 0000                                          _main 00FB  
                                        fsr0h 0005                                          fsr1h 0007  
                                        indf0 0000                                          fsr0l 0004  
                                        indf1 0001                                          fsr1l 0006  
                                        btemp 007E                                 __CFG_BOREN$ON 0000  
                                        start 002E                                 __CFG_MCLRE$ON 0000  
                     __end_of_TMR0_Initialize 00CE                                 __CFG_PLLEN$ON 0000  
              ??_TMR0_DefaultInterruptHandler 0079                __size_of_OSCILLATOR_Initialize 0007  
               __end_of_OSCILLATOR_Initialize 00EE                                         ?_main 0079  
                               __CFG_WDTE$OFF 0000                                         i1l239 0082  
                                       _RCREG 0199                                         _RCSTA 019D  
                                       _TRISA 008C                                         _TRISB 008D  
                                       _TRISC 008E                                         _TXREG 019A  
                                       _TXSTA 019E             __size_of_TMR0_SetInterruptHandler 0006  
                   ?_TMR0_SetInterruptHandler 0034                              __end_of_TMR0_ISR 00F5  
                              _WDT_Initialize 0113                                         pclath 000A  
                                       status 0003                                         wtemp0 007E  
                             __initialization 0030                                  __end_of_main 0101  
                 ?_INTERRUPT_InterruptManager 0079                ??_EUSART_SetRxInterruptHandler 007B  
                                      ??_main 007C                        __end_of_WDT_Initialize 0117  
                                      _ANSELA 018C                                        _ANSELB 018D  
                                      _ANSELC 018E                                        _BORCON 0116  
                                      i1l1029 00A4                                        _OSCCON 0099  
                                      _SPBRGH 019C                                        _SPBRGL 019B  
                                      _WDTCON 0097                                __CFG_PWRTE$OFF 0000  
                              __CFG_STVREN$ON 0000                           _EUSART_Transmit_ISR 006A  
                            ?_TMR0_Initialize 0079                               ?_WDT_Initialize 0079  
                       __end_of_TMR0_CallBack 00E7      TMR0_SetInterruptHandler@InterruptHandler 0034  
                        ?_EUSART_Transmit_ISR 0079                             _SYSTEM_Initialize 00CE  
                     __end_of__initialization 003C                            ?_SYSTEM_Initialize 0079  
        __end_of_EUSART_SetTxInterruptHandler 010D         __size_of_EUSART_SetTxInterruptHandler 0006  
                _EUSART_SetTxInterruptHandler 0107                                __pcstackCOMMON 0079  
                         ??_SYSTEM_Initialize 007C                                     ?_TMR0_ISR 0079  
                              _OPTION_REGbits 0095                     __end_of_SYSTEM_Initialize 00DD  
                       ??_EUSART_Transmit_ISR 0079                                    __pbssBANK0 0020  
                                  __pnvCOMMON 0075                   __size_of_EUSART_Receive_ISR 001A  
                                  __pmaintext 00FB                 ?_EUSART_SetTxInterruptHandler 0034  
            _EUSART_TxDefaultInterruptHandler 0032              __end_of_TMR0_SetInterruptHandler 0107  
                                  ??_TMR0_ISR 0079                                    __pintentry 0004  
                                     _BAUDCON 019F                                       _APFCON0 011D  
                                     _APFCON1 011E                                 _eusartRxCount 0070  
                                     _OSCTUNE 0098                                       __ptext1 00CE  
                                     __ptext2 0113                                       __ptext3 00B9  
                                     __ptext4 0101                                       __ptext5 0085  
                                     __ptext6 00E7                                       __ptext7 0040  
                                     __ptext8 0107                                       __ptext9 010D  
                       _OSCILLATOR_Initialize 00E7                      ??_PIN_MANAGER_Initialize 007B  
                  __size_of_SYSTEM_Initialize 000F                                       clrloop0 00F6  
                        end_of_initialization 003C                             _EUSART_Initialize 0040  
                          ?_EUSART_Initialize 0079                                     _RCSTAbits 019D  
                         ??_EUSART_Initialize 007B                              ??_WDT_Initialize 007B  
              ??_EUSART_SetTxInterruptHandler 007B                      _TMR0_SetInterruptHandler 0101  
                                   _PORTBbits 000D                              __CFG_FOSC$INTOSC 0000  
                   __end_of_EUSART_Initialize 006A                                     _TXSTAbits 019E  
                           __size_of_TMR0_ISR 0007                        ?_OSCILLATOR_Initialize 0079  
                         start_initialization 0030                      __size_of_TMR0_Initialize 0015  
             __size_of_PIN_MANAGER_Initialize 001A  EUSART_SetRxInterruptHandler@interruptHandler 0034  
EUSART_SetTxInterruptHandler@interruptHandler 0034                        __size_of_TMR0_CallBack 000A  
                 __end_of_EUSART_Transmit_ISR 0085                                   __pbssCOMMON 0070  
                                   ___latbits 0001                                 __pcstackBANK0 0034  
                  __end_of_EUSART_Receive_ISR 00B9                    __size_of_EUSART_Initialize 002A  
            _EUSART_RxDefaultInterruptHandler 0030                         _TMR0_InterruptHandler 0075  
                                   __pnvBANK0 0030                        _PIN_MANAGER_Initialize 0085  
                                _eusartRxHead 0072                                  _eusartTxHead 0074  
                                _eusartRxTail 0071                                  _eusartTxTail 0073  
                ??_INTERRUPT_InterruptManager 007A                       _eusartTxBufferRemaining 0077  
                               _TMR0_CallBack 00DD                                _eusartRxBuffer 0020  
                           ??_TMR0_Initialize 007B                                _eusartTxBuffer 0028  
                                   clear_ram0 00F5                                      _PIE1bits 0091  
         __size_of_INTERRUPT_InterruptManager 002A                    ??_TMR0_SetInterruptHandler 007B  
                                    _PIR1bits 0011                                      _TMR0_ISR 00EE  
                              ?_TMR0_CallBack 0079                       ??_OSCILLATOR_Initialize 007B  
                                    __ptext11 00EE                                      __ptext12 00DD  
                                    __ptext13 0117                                      __ptext14 006A  
                                    __ptext15 009F                                 __size_of_main 0006  
        __end_of_TMR0_DefaultInterruptHandler 0118         __size_of_TMR0_DefaultInterruptHandler 0001  
                _TMR0_DefaultInterruptHandler 0117                                      int$flags 007E  
          __end_of_INTERRUPT_InterruptManager 002E                    _INTERRUPT_InterruptManager 0004  
                                  _INTCONbits 000B                               ??_TMR0_CallBack 0079  
                     __size_of_WDT_Initialize 0004                                      intlevel1 0000  
                     ?_PIN_MANAGER_Initialize 0079                             __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART_SetRxInterruptHandler 0113         __size_of_EUSART_SetRxInterruptHandler 0006  
                _EUSART_SetRxInterruptHandler 010D                 ?_TMR0_DefaultInterruptHandler 0079  
                          _EUSART_Receive_ISR 009F                                    _OPTION_REG 0095  
                         ?_EUSART_Receive_ISR 0079                               _TMR0_Initialize 00B9  
                __size_of_EUSART_Transmit_ISR 001B                __end_of_PIN_MANAGER_Initialize 009F  
                        ??_EUSART_Receive_ISR 0079  
