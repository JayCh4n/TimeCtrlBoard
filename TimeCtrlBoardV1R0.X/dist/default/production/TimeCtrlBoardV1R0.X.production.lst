

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 12 10:03:00 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1828
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.45
    34                           ; Generated 16/11/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1828 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  011E                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018E                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029D                     	;# 
   186  029E                     	;# 
   187  029E                     	;# 
   188  0311                     	;# 
   189  0311                     	;# 
   190  0312                     	;# 
   191  0313                     	;# 
   192  0318                     	;# 
   193  0318                     	;# 
   194  0319                     	;# 
   195  031A                     	;# 
   196  038C                     	;# 
   197  038D                     	;# 
   198  038E                     	;# 
   199  0391                     	;# 
   200  0392                     	;# 
   201  0393                     	;# 
   202  0394                     	;# 
   203  0395                     	;# 
   204  0396                     	;# 
   205  039A                     	;# 
   206  039C                     	;# 
   207  039D                     	;# 
   208  039E                     	;# 
   209  039F                     	;# 
   210  0415                     	;# 
   211  0416                     	;# 
   212  0417                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  0FE4                     	;# 
   217  0FE5                     	;# 
   218  0FE6                     	;# 
   219  0FE7                     	;# 
   220  0FE8                     	;# 
   221  0FE9                     	;# 
   222  0FEA                     	;# 
   223  0FEB                     	;# 
   224  0FED                     	;# 
   225  0FEE                     	;# 
   226  0FEF                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  0111                     	;# 
   277  0112                     	;# 
   278  0113                     	;# 
   279  0114                     	;# 
   280  0115                     	;# 
   281  0116                     	;# 
   282  0117                     	;# 
   283  0118                     	;# 
   284  0119                     	;# 
   285  011A                     	;# 
   286  011B                     	;# 
   287  011D                     	;# 
   288  011E                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  018E                     	;# 
   292  0191                     	;# 
   293  0191                     	;# 
   294  0192                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0199                     	;# 
   302  019A                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019C                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020C                     	;# 
   313  020D                     	;# 
   314  020E                     	;# 
   315  0211                     	;# 
   316  0211                     	;# 
   317  0212                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0216                     	;# 
   328  0216                     	;# 
   329  0217                     	;# 
   330  0217                     	;# 
   331  0291                     	;# 
   332  0291                     	;# 
   333  0292                     	;# 
   334  0293                     	;# 
   335  0294                     	;# 
   336  0295                     	;# 
   337  0295                     	;# 
   338  0296                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  029B                     	;# 
   344  029C                     	;# 
   345  029D                     	;# 
   346  029E                     	;# 
   347  029E                     	;# 
   348  0311                     	;# 
   349  0311                     	;# 
   350  0312                     	;# 
   351  0313                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  038C                     	;# 
   357  038D                     	;# 
   358  038E                     	;# 
   359  0391                     	;# 
   360  0392                     	;# 
   361  0393                     	;# 
   362  0394                     	;# 
   363  0395                     	;# 
   364  0396                     	;# 
   365  039A                     	;# 
   366  039C                     	;# 
   367  039D                     	;# 
   368  039E                     	;# 
   369  039F                     	;# 
   370  0415                     	;# 
   371  0416                     	;# 
   372  0417                     	;# 
   373  041C                     	;# 
   374  041D                     	;# 
   375  041E                     	;# 
   376  0FE4                     	;# 
   377  0FE5                     	;# 
   378  0FE6                     	;# 
   379  0FE7                     	;# 
   380  0FE8                     	;# 
   381  0FE9                     	;# 
   382  0FEA                     	;# 
   383  0FEB                     	;# 
   384  0FED                     	;# 
   385  0FEE                     	;# 
   386  0FEF                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009B                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  010C                     	;# 
   434  010D                     	;# 
   435  010E                     	;# 
   436  0111                     	;# 
   437  0112                     	;# 
   438  0113                     	;# 
   439  0114                     	;# 
   440  0115                     	;# 
   441  0116                     	;# 
   442  0117                     	;# 
   443  0118                     	;# 
   444  0119                     	;# 
   445  011A                     	;# 
   446  011B                     	;# 
   447  011D                     	;# 
   448  011E                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  018E                     	;# 
   452  0191                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0194                     	;# 
   459  0195                     	;# 
   460  0196                     	;# 
   461  0199                     	;# 
   462  019A                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019C                     	;# 
   468  019C                     	;# 
   469  019D                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  020C                     	;# 
   473  020D                     	;# 
   474  020E                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0291                     	;# 
   492  0291                     	;# 
   493  0292                     	;# 
   494  0293                     	;# 
   495  0294                     	;# 
   496  0295                     	;# 
   497  0295                     	;# 
   498  0296                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  029B                     	;# 
   504  029C                     	;# 
   505  029D                     	;# 
   506  029E                     	;# 
   507  029E                     	;# 
   508  0311                     	;# 
   509  0311                     	;# 
   510  0312                     	;# 
   511  0313                     	;# 
   512  0318                     	;# 
   513  0318                     	;# 
   514  0319                     	;# 
   515  031A                     	;# 
   516  038C                     	;# 
   517  038D                     	;# 
   518  038E                     	;# 
   519  0391                     	;# 
   520  0392                     	;# 
   521  0393                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  039A                     	;# 
   526  039C                     	;# 
   527  039D                     	;# 
   528  039E                     	;# 
   529  039F                     	;# 
   530  0415                     	;# 
   531  0416                     	;# 
   532  0417                     	;# 
   533  041C                     	;# 
   534  041D                     	;# 
   535  041E                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0095                     	;# 
   583  0096                     	;# 
   584  0097                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009A                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  0111                     	;# 
   597  0112                     	;# 
   598  0113                     	;# 
   599  0114                     	;# 
   600  0115                     	;# 
   601  0116                     	;# 
   602  0117                     	;# 
   603  0118                     	;# 
   604  0119                     	;# 
   605  011A                     	;# 
   606  011B                     	;# 
   607  011D                     	;# 
   608  011E                     	;# 
   609  018C                     	;# 
   610  018D                     	;# 
   611  018E                     	;# 
   612  0191                     	;# 
   613  0191                     	;# 
   614  0192                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019C                     	;# 
   628  019C                     	;# 
   629  019D                     	;# 
   630  019E                     	;# 
   631  019F                     	;# 
   632  020C                     	;# 
   633  020D                     	;# 
   634  020E                     	;# 
   635  0211                     	;# 
   636  0211                     	;# 
   637  0212                     	;# 
   638  0212                     	;# 
   639  0213                     	;# 
   640  0213                     	;# 
   641  0214                     	;# 
   642  0214                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0216                     	;# 
   648  0216                     	;# 
   649  0217                     	;# 
   650  0217                     	;# 
   651  0291                     	;# 
   652  0291                     	;# 
   653  0292                     	;# 
   654  0293                     	;# 
   655  0294                     	;# 
   656  0295                     	;# 
   657  0295                     	;# 
   658  0296                     	;# 
   659  0298                     	;# 
   660  0298                     	;# 
   661  0299                     	;# 
   662  029A                     	;# 
   663  029B                     	;# 
   664  029C                     	;# 
   665  029D                     	;# 
   666  029E                     	;# 
   667  029E                     	;# 
   668  0311                     	;# 
   669  0311                     	;# 
   670  0312                     	;# 
   671  0313                     	;# 
   672  0318                     	;# 
   673  0318                     	;# 
   674  0319                     	;# 
   675  031A                     	;# 
   676  038C                     	;# 
   677  038D                     	;# 
   678  038E                     	;# 
   679  0391                     	;# 
   680  0392                     	;# 
   681  0393                     	;# 
   682  0394                     	;# 
   683  0395                     	;# 
   684  0396                     	;# 
   685  039A                     	;# 
   686  039C                     	;# 
   687  039D                     	;# 
   688  039E                     	;# 
   689  039F                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  041C                     	;# 
   694  041D                     	;# 
   695  041E                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  000E                     	;# 
   722  0011                     	;# 
   723  0012                     	;# 
   724  0013                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0093                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  010E                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019C                     	;# 
   788  019C                     	;# 
   789  019D                     	;# 
   790  019E                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  020D                     	;# 
   794  020E                     	;# 
   795  0211                     	;# 
   796  0211                     	;# 
   797  0212                     	;# 
   798  0212                     	;# 
   799  0213                     	;# 
   800  0213                     	;# 
   801  0214                     	;# 
   802  0214                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0216                     	;# 
   808  0216                     	;# 
   809  0217                     	;# 
   810  0217                     	;# 
   811  0291                     	;# 
   812  0291                     	;# 
   813  0292                     	;# 
   814  0293                     	;# 
   815  0294                     	;# 
   816  0295                     	;# 
   817  0295                     	;# 
   818  0296                     	;# 
   819  0298                     	;# 
   820  0298                     	;# 
   821  0299                     	;# 
   822  029A                     	;# 
   823  029B                     	;# 
   824  029C                     	;# 
   825  029D                     	;# 
   826  029E                     	;# 
   827  029E                     	;# 
   828  0311                     	;# 
   829  0311                     	;# 
   830  0312                     	;# 
   831  0313                     	;# 
   832  0318                     	;# 
   833  0318                     	;# 
   834  0319                     	;# 
   835  031A                     	;# 
   836  038C                     	;# 
   837  038D                     	;# 
   838  038E                     	;# 
   839  0391                     	;# 
   840  0392                     	;# 
   841  0393                     	;# 
   842  0394                     	;# 
   843  0395                     	;# 
   844  0396                     	;# 
   845  039A                     	;# 
   846  039C                     	;# 
   847  039D                     	;# 
   848  039E                     	;# 
   849  039F                     	;# 
   850  0415                     	;# 
   851  0416                     	;# 
   852  0417                     	;# 
   853  041C                     	;# 
   854  041D                     	;# 
   855  041E                     	;# 
   856  0FE4                     	;# 
   857  0FE5                     	;# 
   858  0FE6                     	;# 
   859  0FE7                     	;# 
   860  0FE8                     	;# 
   861  0FE9                     	;# 
   862  0FEA                     	;# 
   863  0FEB                     	;# 
   864  0FED                     	;# 
   865  0FEE                     	;# 
   866  0FEF                     	;# 
   867  0000                     	;# 
   868  0001                     	;# 
   869  0002                     	;# 
   870  0003                     	;# 
   871  0004                     	;# 
   872  0005                     	;# 
   873  0006                     	;# 
   874  0007                     	;# 
   875  0008                     	;# 
   876  0009                     	;# 
   877  000A                     	;# 
   878  000B                     	;# 
   879  000C                     	;# 
   880  000D                     	;# 
   881  000E                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0015                     	;# 
   886  0016                     	;# 
   887  0016                     	;# 
   888  0017                     	;# 
   889  0018                     	;# 
   890  0019                     	;# 
   891  001A                     	;# 
   892  001B                     	;# 
   893  001C                     	;# 
   894  001E                     	;# 
   895  001F                     	;# 
   896  008C                     	;# 
   897  008D                     	;# 
   898  008E                     	;# 
   899  0091                     	;# 
   900  0092                     	;# 
   901  0093                     	;# 
   902  0095                     	;# 
   903  0096                     	;# 
   904  0097                     	;# 
   905  0098                     	;# 
   906  0099                     	;# 
   907  009A                     	;# 
   908  009B                     	;# 
   909  009B                     	;# 
   910  009C                     	;# 
   911  009D                     	;# 
   912  009E                     	;# 
   913  010C                     	;# 
   914  010D                     	;# 
   915  010E                     	;# 
   916  0111                     	;# 
   917  0112                     	;# 
   918  0113                     	;# 
   919  0114                     	;# 
   920  0115                     	;# 
   921  0116                     	;# 
   922  0117                     	;# 
   923  0118                     	;# 
   924  0119                     	;# 
   925  011A                     	;# 
   926  011B                     	;# 
   927  011D                     	;# 
   928  011E                     	;# 
   929  018C                     	;# 
   930  018D                     	;# 
   931  018E                     	;# 
   932  0191                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0194                     	;# 
   939  0195                     	;# 
   940  0196                     	;# 
   941  0199                     	;# 
   942  019A                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019F                     	;# 
   952  020C                     	;# 
   953  020D                     	;# 
   954  020E                     	;# 
   955  0211                     	;# 
   956  0211                     	;# 
   957  0212                     	;# 
   958  0212                     	;# 
   959  0213                     	;# 
   960  0213                     	;# 
   961  0214                     	;# 
   962  0214                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0216                     	;# 
   968  0216                     	;# 
   969  0217                     	;# 
   970  0217                     	;# 
   971  0291                     	;# 
   972  0291                     	;# 
   973  0292                     	;# 
   974  0293                     	;# 
   975  0294                     	;# 
   976  0295                     	;# 
   977  0295                     	;# 
   978  0296                     	;# 
   979  0298                     	;# 
   980  0298                     	;# 
   981  0299                     	;# 
   982  029A                     	;# 
   983  029B                     	;# 
   984  029C                     	;# 
   985  029D                     	;# 
   986  029E                     	;# 
   987  029E                     	;# 
   988  0311                     	;# 
   989  0311                     	;# 
   990  0312                     	;# 
   991  0313                     	;# 
   992  0318                     	;# 
   993  0318                     	;# 
   994  0319                     	;# 
   995  031A                     	;# 
   996  038C                     	;# 
   997  038D                     	;# 
   998  038E                     	;# 
   999  0391                     	;# 
  1000  0392                     	;# 
  1001  0393                     	;# 
  1002  0394                     	;# 
  1003  0395                     	;# 
  1004  0396                     	;# 
  1005  039A                     	;# 
  1006  039C                     	;# 
  1007  039D                     	;# 
  1008  039E                     	;# 
  1009  039F                     	;# 
  1010  0415                     	;# 
  1011  0416                     	;# 
  1012  0417                     	;# 
  1013  041C                     	;# 
  1014  041D                     	;# 
  1015  041E                     	;# 
  1016  0FE4                     	;# 
  1017  0FE5                     	;# 
  1018  0FE6                     	;# 
  1019  0FE7                     	;# 
  1020  0FE8                     	;# 
  1021  0FE9                     	;# 
  1022  0FEA                     	;# 
  1023  0FEB                     	;# 
  1024  0FED                     	;# 
  1025  0FEE                     	;# 
  1026  0FEF                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0008                     	;# 
  1036  0009                     	;# 
  1037  000A                     	;# 
  1038  000B                     	;# 
  1039  000C                     	;# 
  1040  000D                     	;# 
  1041  000E                     	;# 
  1042  0011                     	;# 
  1043  0012                     	;# 
  1044  0013                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0016                     	;# 
  1048  0017                     	;# 
  1049  0018                     	;# 
  1050  0019                     	;# 
  1051  001A                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001E                     	;# 
  1055  001F                     	;# 
  1056  008C                     	;# 
  1057  008D                     	;# 
  1058  008E                     	;# 
  1059  0091                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0095                     	;# 
  1063  0096                     	;# 
  1064  0097                     	;# 
  1065  0098                     	;# 
  1066  0099                     	;# 
  1067  009A                     	;# 
  1068  009B                     	;# 
  1069  009B                     	;# 
  1070  009C                     	;# 
  1071  009D                     	;# 
  1072  009E                     	;# 
  1073  010C                     	;# 
  1074  010D                     	;# 
  1075  010E                     	;# 
  1076  0111                     	;# 
  1077  0112                     	;# 
  1078  0113                     	;# 
  1079  0114                     	;# 
  1080  0115                     	;# 
  1081  0116                     	;# 
  1082  0117                     	;# 
  1083  0118                     	;# 
  1084  0119                     	;# 
  1085  011A                     	;# 
  1086  011B                     	;# 
  1087  011D                     	;# 
  1088  011E                     	;# 
  1089  018C                     	;# 
  1090  018D                     	;# 
  1091  018E                     	;# 
  1092  0191                     	;# 
  1093  0191                     	;# 
  1094  0192                     	;# 
  1095  0193                     	;# 
  1096  0193                     	;# 
  1097  0193                     	;# 
  1098  0194                     	;# 
  1099  0195                     	;# 
  1100  0196                     	;# 
  1101  0199                     	;# 
  1102  019A                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019C                     	;# 
  1108  019C                     	;# 
  1109  019D                     	;# 
  1110  019E                     	;# 
  1111  019F                     	;# 
  1112  020C                     	;# 
  1113  020D                     	;# 
  1114  020E                     	;# 
  1115  0211                     	;# 
  1116  0211                     	;# 
  1117  0212                     	;# 
  1118  0212                     	;# 
  1119  0213                     	;# 
  1120  0213                     	;# 
  1121  0214                     	;# 
  1122  0214                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  0291                     	;# 
  1132  0291                     	;# 
  1133  0292                     	;# 
  1134  0293                     	;# 
  1135  0294                     	;# 
  1136  0295                     	;# 
  1137  0295                     	;# 
  1138  0296                     	;# 
  1139  0298                     	;# 
  1140  0298                     	;# 
  1141  0299                     	;# 
  1142  029A                     	;# 
  1143  029B                     	;# 
  1144  029C                     	;# 
  1145  029D                     	;# 
  1146  029E                     	;# 
  1147  029E                     	;# 
  1148  0311                     	;# 
  1149  0311                     	;# 
  1150  0312                     	;# 
  1151  0313                     	;# 
  1152  0318                     	;# 
  1153  0318                     	;# 
  1154  0319                     	;# 
  1155  031A                     	;# 
  1156  038C                     	;# 
  1157  038D                     	;# 
  1158  038E                     	;# 
  1159  0391                     	;# 
  1160  0392                     	;# 
  1161  0393                     	;# 
  1162  0394                     	;# 
  1163  0395                     	;# 
  1164  0396                     	;# 
  1165  039A                     	;# 
  1166  039C                     	;# 
  1167  039D                     	;# 
  1168  039E                     	;# 
  1169  039F                     	;# 
  1170  0415                     	;# 
  1171  0416                     	;# 
  1172  0417                     	;# 
  1173  041C                     	;# 
  1174  041D                     	;# 
  1175  041E                     	;# 
  1176  0FE4                     	;# 
  1177  0FE5                     	;# 
  1178  0FE6                     	;# 
  1179  0FE7                     	;# 
  1180  0FE8                     	;# 
  1181  0FE9                     	;# 
  1182  0FEA                     	;# 
  1183  0FEB                     	;# 
  1184  0FED                     	;# 
  1185  0FEE                     	;# 
  1186  0FEF                     	;# 
  1187                           
  1188                           	psect	nvBANK0
  1189  005C                     __pnvBANK0:	
  1190  005C                     _TMR0_InterruptHandler:	
  1191  005C                     	ds	2
  1192  005E                     _EUSART_RxDefaultInterruptHandler:	
  1193  005E                     	ds	2
  1194  0060                     _EUSART_TxDefaultInterruptHandler:	
  1195  0060                     	ds	2
  1196  0062                     _eusartTxBufferRemaining:	
  1197  0062                     	ds	1
  1198  0063                     _timer0ReloadVal:	
  1199  0063                     	ds	1
  1200  0015                     _TMR0	set	21
  1201  0011                     _PIR1bits	set	17
  1202  000B                     _INTCONbits	set	11
  1203  000D                     _PORTBbits	set	13
  1204  0095                     _OPTION_REG	set	149
  1205  0091                     _PIE1bits	set	145
  1206  0095                     _OPTION_REGbits	set	149
  1207  008E                     _TRISC	set	142
  1208  008D                     _TRISB	set	141
  1209  008C                     _TRISA	set	140
  1210  0097                     _WDTCON	set	151
  1211  0098                     _OSCTUNE	set	152
  1212  0099                     _OSCCON	set	153
  1213  011E                     _APFCON1	set	286
  1214  011D                     _APFCON0	set	285
  1215  010E                     _LATC	set	270
  1216  010D                     _LATB	set	269
  1217  010C                     _LATA	set	268
  1218  0116                     _BORCON	set	278
  1219  0199                     _RCREG	set	409
  1220  019D                     _RCSTAbits	set	413
  1221  019A                     _TXREG	set	410
  1222  019E                     _TXSTAbits	set	414
  1223  019C                     _SPBRGH	set	412
  1224  019B                     _SPBRGL	set	411
  1225  019E                     _TXSTA	set	414
  1226  019D                     _RCSTA	set	413
  1227  019F                     _BAUDCON	set	415
  1228  018C                     _ANSELA	set	396
  1229  018D                     _ANSELB	set	397
  1230  018E                     _ANSELC	set	398
  1231  020E                     _WPUC	set	526
  1232  020C                     _WPUA	set	524
  1233  020D                     _WPUB	set	525
  1234                           
  1235                           ; #config settings
  1236  0000                     
  1237                           	psect	cinit
  1238  0030                     start_initialization:	
  1239  0030                     __initialization:	
  1240                           
  1241                           ; Clear objects allocated to COMMON
  1242  0030  3070               	movlw	low __pbssCOMMON
  1243  0031  0084               	movwf	4
  1244  0032  3000               	movlw	high __pbssCOMMON
  1245  0033  0085               	movwf	5
  1246  0034  3008               	movlw	8
  1247  0035  3181  2153  3180   	fcall	clear_ram0
  1248                           
  1249                           ; Clear objects allocated to BANK0
  1250  0038  3020               	movlw	low __pbssBANK0
  1251  0039  0084               	movwf	4
  1252  003A  3000               	movlw	high __pbssBANK0
  1253  003B  0085               	movwf	5
  1254  003C  303C               	movlw	60
  1255  003D  3181  2153  3180   	fcall	clear_ram0
  1256                           
  1257                           ; Clear objects allocated to BANK1
  1258  0040  30A0               	movlw	low __pbssBANK1
  1259  0041  0084               	movwf	4
  1260  0042  3000               	movlw	high __pbssBANK1
  1261  0043  0085               	movwf	5
  1262  0044  3032               	movlw	50
  1263  0045  3181  2153  3180   	fcall	clear_ram0
  1264                           
  1265                           ; Clear objects allocated to BANK2
  1266  0048  3020               	movlw	low __pbssBANK2
  1267  0049  0084               	movwf	4
  1268  004A  3001               	movlw	high __pbssBANK2
  1269  004B  0085               	movwf	5
  1270  004C  3040               	movlw	64
  1271  004D  3181  2153         	fcall	clear_ram0
  1272  004F                     end_of_initialization:	
  1273                           ;End of C runtime variable initialization code
  1274                           
  1275  004F                     __end_of__initialization:	
  1276  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1277  0050  0020               	movlb	0
  1278  0051  3181  2938         	ljmp	_main	;jump to C main() function
  1279                           
  1280                           	psect	bssCOMMON
  1281  0070                     __pbssCOMMON:	
  1282  0070                     _eusartRxTail:	
  1283  0070                     	ds	1
  1284  0071                     _eusartRxHead:	
  1285  0071                     	ds	1
  1286  0072                     _eusartTxTail:	
  1287  0072                     	ds	1
  1288  0073                     _eusartTxHead:	
  1289  0073                     	ds	1
  1290  0074                     TMR0_CallBack@eusartRXOvertimeCnt:	
  1291  0074                     	ds	1
  1292  0075                     _eusartRxOvertimeMask:	
  1293  0075                     	ds	1
  1294  0076                     _eusartRxCount:	
  1295  0076                     	ds	1
  1296  0077                     _timeCtrlStartFlag:	
  1297  0077                     	ds	1
  1298                           
  1299                           	psect	bssBANK0
  1300  0020                     __pbssBANK0:	
  1301  0020                     _eusartRxBuffer:	
  1302  0020                     	ds	50
  1303  0052                     _timeCtrlIQRSta:	
  1304  0052                     	ds	8
  1305  005A                     TMR0_CallBack@timeCrlCnt:	
  1306  005A                     	ds	1
  1307  005B                     _timeCtrlOvertimeMask:	
  1308  005B                     	ds	1
  1309                           
  1310                           	psect	bssBANK1
  1311  00A0                     __pbssBANK1:	
  1312  00A0                     _eusartTxBuffer:	
  1313  00A0                     	ds	50
  1314                           
  1315                           	psect	bssBANK2
  1316  0120                     __pbssBANK2:	
  1317  0120                     _timeCtrlValue:	
  1318  0120                     	ds	64
  1319                           
  1320                           	psect	clrtext
  1321  0153                     clear_ram0:	
  1322                           ;	Called with FSR0 containing the base address, and
  1323                           ;	WREG with the size to clear
  1324                           
  1325  0153  0064               	clrwdt	;clear the watchdog before getting into this loop
  1326  0154                     clrloop0:	
  1327  0154  0180               	clrf	0	;clear RAM location pointed to by FSR
  1328  0155  3101               	addfsr 0,1
  1329  0156  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1330  0157  2954               	goto	clrloop0	;have we reached the end yet?
  1331  0158  3400               	retlw	0	;all done for this memory range, return
  1332                           
  1333                           	psect	cstackCOMMON
  1334  0078                     __pcstackCOMMON:	
  1335  0078                     ?_PIN_MANAGER_Initialize:	
  1336  0078                     ?_OSCILLATOR_Initialize:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0078                     ?_WDT_Initialize:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0078                     ?_TMR0_Initialize:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0078                     ?_EUSART_Initialize:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0078                     ?_TMR0_ISR:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0078                     ?_TMR0_DefaultInterruptHandler:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0078                     ??_TMR0_DefaultInterruptHandler:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0078                     ?_TMR0_CallBack:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0078                     ??_TMR0_CallBack:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0078                     ?_EUSART_Receive_ISR:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0078                     ??_EUSART_Receive_ISR:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0078                     ?_EUSART_Transmit_ISR:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0078                     ??_EUSART_Transmit_ISR:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0078                     ?_SYSTEM_Initialize:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0078                     ?_Get_Device_Addr:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0078                     ?_INTERRUPT_InterruptManager:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0078                     ?_EUSART_Deal:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0078                     ?_main:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390                           
  1391                           ; 1 bytes @ 0x0
  1392  0078                     	ds	1
  1393  0079                     ??_TMR0_ISR:	
  1394  0079                     ??_INTERRUPT_InterruptManager:	
  1395                           ; 1 bytes @ 0x1
  1396                           
  1397                           
  1398                           ; 1 bytes @ 0x1
  1399  0079                     	ds	1
  1400  007A                     ??_PIN_MANAGER_Initialize:	
  1401  007A                     ??_OSCILLATOR_Initialize:	
  1402                           ; 1 bytes @ 0x2
  1403                           
  1404  007A                     ??_WDT_Initialize:	
  1405                           ; 1 bytes @ 0x2
  1406                           
  1407  007A                     ?_TMR0_SetInterruptHandler:	
  1408                           ; 1 bytes @ 0x2
  1409                           
  1410  007A                     ?_EUSART_SetRxInterruptHandler:	
  1411                           ; 1 bytes @ 0x2
  1412                           
  1413  007A                     ?_EUSART_SetTxInterruptHandler:	
  1414                           ; 1 bytes @ 0x2
  1415                           
  1416  007A                     ??_Get_Device_Addr:	
  1417                           ; 1 bytes @ 0x2
  1418                           
  1419  007A                     TMR0_SetInterruptHandler@InterruptHandler:	
  1420                           ; 1 bytes @ 0x2
  1421                           
  1422  007A                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1423                           ; 2 bytes @ 0x2
  1424                           
  1425  007A                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1426                           ; 2 bytes @ 0x2
  1427                           
  1428                           
  1429                           ; 2 bytes @ 0x2
  1430  007A                     	ds	1
  1431  007B                     Get_Device_Addr@device_addr:	
  1432                           
  1433                           ; 1 bytes @ 0x3
  1434  007B                     	ds	1
  1435  007C                     ??_TMR0_SetInterruptHandler:	
  1436  007C                     ??_EUSART_SetRxInterruptHandler:	
  1437                           ; 1 bytes @ 0x4
  1438                           
  1439  007C                     ??_EUSART_SetTxInterruptHandler:	
  1440                           ; 1 bytes @ 0x4
  1441                           
  1442  007C                     ??_SYSTEM_Initialize:	
  1443                           ; 1 bytes @ 0x4
  1444                           
  1445  007C                     ??_EUSART_Deal:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448  007C                     ??_main:	
  1449                           ; 1 bytes @ 0x4
  1450                           
  1451                           
  1452                           	psect	cstackBANK0
  1453  0064                     __pcstackBANK0:	
  1454                           ; 1 bytes @ 0x4
  1455                           
  1456  0064                     ??_TMR0_Initialize:	
  1457  0064                     ??_EUSART_Initialize:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x0
  1462  0064                     	ds	1
  1463                           
  1464                           	psect	maintext
  1465  0138                     __pmaintext:	
  1466 ;;
  1467 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1468 ;;
  1469 ;; *************** function _main *****************
  1470 ;; Defined at:
  1471 ;;		line 49 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : B1F/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1485 ;;      Params:         0       0       0       0
  1486 ;;      Locals:         0       0       0       0
  1487 ;;      Temps:          0       0       0       0
  1488 ;;      Totals:         0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels required when called:    7
  1491 ;; This function calls:
  1492 ;;		_EUSART_Deal
  1493 ;;		_SYSTEM_Initialize
  1494 ;; This function is called by:
  1495 ;;		Startup code after reset
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _main
  1501  0138                     _main:	
  1502                           
  1503                           ;main.c: 52: SYSTEM_Initialize();
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1507  0138  3181  211A  3181   	fcall	_SYSTEM_Initialize
  1508                           
  1509                           ;main.c: 58: (INTCONbits.GIE = 1);
  1510  013B  178B               	bsf	11,7	;volatile
  1511                           
  1512                           ;main.c: 61: (INTCONbits.PEIE = 1);
  1513  013C  170B               	bsf	11,6	;volatile
  1514  013D                     l1332:	
  1515                           ;main.c: 69: while (1)
  1516                           
  1517                           
  1518                           ;main.c: 70: {
  1519                           ;main.c: 72: if (eusartRxOvertimeMask)
  1520  013D  0875               	movf	_eusartRxOvertimeMask,w
  1521  013E  1903               	btfsc	3,2
  1522  013F  293D               	goto	l1332
  1523                           
  1524                           ;main.c: 73: {
  1525                           ;main.c: 74: EUSART_Deal();
  1526  0140  3181  210A  3181   	fcall	_EUSART_Deal
  1527                           
  1528                           ;main.c: 75: eusartRxOvertimeMask = 0;
  1529  0143  01F5               	clrf	_eusartRxOvertimeMask
  1530  0144  293D               	goto	l1332
  1531  0145                     __end_of_main:	
  1532                           
  1533                           	psect	text1
  1534  011A                     __ptext1:	
  1535 ;; *************** function _SYSTEM_Initialize *****************
  1536 ;; Defined at:
  1537 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1551 ;;      Params:         0       0       0       0
  1552 ;;      Locals:         0       0       0       0
  1553 ;;      Temps:          0       0       0       0
  1554 ;;      Totals:         0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    6
  1558 ;; This function calls:
  1559 ;;		_EUSART_Initialize
  1560 ;;		_OSCILLATOR_Initialize
  1561 ;;		_PIN_MANAGER_Initialize
  1562 ;;		_TMR0_Initialize
  1563 ;;		_WDT_Initialize
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _SYSTEM_Initialize
  1571  011A                     _SYSTEM_Initialize:	
  1572                           
  1573                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1577  011A  3180  20C1  3181   	fcall	_PIN_MANAGER_Initialize
  1578                           
  1579                           ;mcc.c: 53: OSCILLATOR_Initialize();
  1580  011D  3181  2145  3181   	fcall	_OSCILLATOR_Initialize
  1581                           
  1582                           ;mcc.c: 54: WDT_Initialize();
  1583  0120  3181  216B  3181   	fcall	_WDT_Initialize
  1584                           
  1585                           ;mcc.c: 55: TMR0_Initialize();
  1586  0123  3180  20F5  3181   	fcall	_TMR0_Initialize
  1587                           
  1588                           ;mcc.c: 56: EUSART_Initialize();
  1589  0126  3180  2053         	fcall	_EUSART_Initialize
  1590  0128  0008               	return
  1591  0129                     __end_of_SYSTEM_Initialize:	
  1592                           
  1593                           	psect	text2
  1594  016B                     __ptext2:	
  1595 ;; *************** function _WDT_Initialize *****************
  1596 ;; Defined at:
  1597 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1611 ;;      Params:         0       0       0       0
  1612 ;;      Locals:         0       0       0       0
  1613 ;;      Temps:          0       0       0       0
  1614 ;;      Totals:         0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    4
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_SYSTEM_Initialize
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function _WDT_Initialize
  1627  016B                     _WDT_Initialize:	
  1628                           
  1629                           ;mcc.c: 72: WDTCON = 0x16;
  1630                           
  1631                           ;incstack = 0
  1632                           ; Regs used in _WDT_Initialize: [wreg]
  1633  016B  3016               	movlw	22
  1634  016C  0021               	movlb	1	; select bank1
  1635  016D  0097               	movwf	23	;volatile
  1636  016E  0008               	return
  1637  016F                     __end_of_WDT_Initialize:	
  1638                           
  1639                           	psect	text3
  1640  00F5                     __ptext3:	
  1641 ;; *************** function _TMR0_Initialize *****************
  1642 ;; Defined at:
  1643 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1657 ;;      Params:         0       0       0       0
  1658 ;;      Locals:         0       0       0       0
  1659 ;;      Temps:          0       1       0       0
  1660 ;;      Totals:         0       1       0       0
  1661 ;;Total ram usage:        1 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    5
  1664 ;; This function calls:
  1665 ;;		_TMR0_SetInterruptHandler
  1666 ;; This function is called by:
  1667 ;;		_SYSTEM_Initialize
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _TMR0_Initialize
  1673  00F5                     _TMR0_Initialize:	
  1674                           
  1675                           ;tmr0.c: 69: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  1676                           
  1677                           ;incstack = 0
  1678                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1679  00F5  0021               	movlb	1	; select bank1
  1680  00F6  0815               	movf	21,w	;volatile
  1681  00F7  39C0               	andlw	192
  1682  00F8  3817               	iorlw	23
  1683  00F9  0095               	movwf	21	;volatile
  1684                           
  1685                           ;tmr0.c: 72: TMR0 = 0xF0;
  1686  00FA  30F0               	movlw	240
  1687  00FB  0020               	movlb	0	; select bank0
  1688  00FC  0095               	movwf	21	;volatile
  1689                           
  1690                           ;tmr0.c: 75: timer0ReloadVal= 240;
  1691  00FD  30F0               	movlw	240
  1692  00FE  00E4               	movwf	??_TMR0_Initialize
  1693  00FF  0864               	movf	??_TMR0_Initialize,w
  1694  0100  00E3               	movwf	_timer0ReloadVal	;volatile
  1695                           
  1696                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  1697  0101  110B               	bcf	11,2	;volatile
  1698                           
  1699                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  1700  0102  168B               	bsf	11,5	;volatile
  1701                           
  1702                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1703  0103  306F               	movlw	low _TMR0_DefaultInterruptHandler
  1704  0104  00FA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1705  0105  3001               	movlw	high _TMR0_DefaultInterruptHandler
  1706  0106  00FB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1707  0107  3181  2159         	fcall	_TMR0_SetInterruptHandler
  1708  0109  0008               	return
  1709  010A                     __end_of_TMR0_Initialize:	
  1710                           
  1711                           	psect	text4
  1712  0159                     __ptext4:	
  1713 ;; *************** function _TMR0_SetInterruptHandler *****************
  1714 ;; Defined at:
  1715 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1718 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1730 ;;      Params:         2       0       0       0
  1731 ;;      Locals:         0       0       0       0
  1732 ;;      Temps:          0       0       0       0
  1733 ;;      Totals:         2       0       0       0
  1734 ;;Total ram usage:        2 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    4
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_TMR0_Initialize
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _TMR0_SetInterruptHandler
  1746  0159                     _TMR0_SetInterruptHandler:	
  1747                           
  1748                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1752  0159  087B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1753  015A  0020               	movlb	0	; select bank0
  1754  015B  00DD               	movwf	_TMR0_InterruptHandler+1
  1755  015C  087A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1756  015D  00DC               	movwf	_TMR0_InterruptHandler
  1757  015E  0008               	return
  1758  015F                     __end_of_TMR0_SetInterruptHandler:	
  1759                           
  1760                           	psect	text5
  1761  00C1                     __ptext5:	
  1762 ;; *************** function _PIN_MANAGER_Initialize *****************
  1763 ;; Defined at:
  1764 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1778 ;;      Params:         0       0       0       0
  1779 ;;      Locals:         0       0       0       0
  1780 ;;      Temps:          0       0       0       0
  1781 ;;      Totals:         0       0       0       0
  1782 ;;Total ram usage:        0 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    4
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_SYSTEM_Initialize
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function _PIN_MANAGER_Initialize
  1794  00C1                     _PIN_MANAGER_Initialize:	
  1795                           
  1796                           ;pin_manager.c: 62: LATA = 0x04;
  1797                           
  1798                           ;incstack = 0
  1799                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1800  00C1  3004               	movlw	4
  1801  00C2  0022               	movlb	2	; select bank2
  1802  00C3  008C               	movwf	12	;volatile
  1803                           
  1804                           ;pin_manager.c: 63: LATB = 0x00;
  1805  00C4  018D               	clrf	13	;volatile
  1806                           
  1807                           ;pin_manager.c: 64: LATC = 0x00;
  1808  00C5  018E               	clrf	14	;volatile
  1809                           
  1810                           ;pin_manager.c: 69: TRISA = 0x3B;
  1811  00C6  303B               	movlw	59
  1812  00C7  0021               	movlb	1	; select bank1
  1813  00C8  008C               	movwf	12	;volatile
  1814                           
  1815                           ;pin_manager.c: 70: TRISB = 0xF0;
  1816  00C9  30F0               	movlw	240
  1817  00CA  008D               	movwf	13	;volatile
  1818                           
  1819                           ;pin_manager.c: 71: TRISC = 0x00;
  1820  00CB  018E               	clrf	14	;volatile
  1821                           
  1822                           ;pin_manager.c: 76: ANSELC = 0x00;
  1823  00CC  0023               	movlb	3	; select bank3
  1824  00CD  018E               	clrf	14	;volatile
  1825                           
  1826                           ;pin_manager.c: 77: ANSELB = 0x00;
  1827  00CE  018D               	clrf	13	;volatile
  1828                           
  1829                           ;pin_manager.c: 78: ANSELA = 0x13;
  1830  00CF  3013               	movlw	19
  1831  00D0  008C               	movwf	12	;volatile
  1832                           
  1833                           ;pin_manager.c: 83: WPUB = 0x00;
  1834  00D1  0024               	movlb	4	; select bank4
  1835  00D2  018D               	clrf	13	;volatile
  1836                           
  1837                           ;pin_manager.c: 84: WPUA = 0x00;
  1838  00D3  018C               	clrf	12	;volatile
  1839                           
  1840                           ;pin_manager.c: 85: WPUC = 0x00;
  1841  00D4  018E               	clrf	14	;volatile
  1842                           
  1843                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 1;
  1844  00D5  0021               	movlb	1	; select bank1
  1845  00D6  1795               	bsf	21,7	;volatile
  1846                           
  1847                           ;pin_manager.c: 95: APFCON0 = 0x00;
  1848  00D7  0022               	movlb	2	; select bank2
  1849  00D8  019D               	clrf	29	;volatile
  1850                           
  1851                           ;pin_manager.c: 96: APFCON1 = 0x00;
  1852  00D9  019E               	clrf	30	;volatile
  1853  00DA  0008               	return
  1854  00DB                     __end_of_PIN_MANAGER_Initialize:	
  1855                           
  1856                           	psect	text6
  1857  0145                     __ptext6:	
  1858 ;; *************** function _OSCILLATOR_Initialize *****************
  1859 ;; Defined at:
  1860 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1874 ;;      Params:         0       0       0       0
  1875 ;;      Locals:         0       0       0       0
  1876 ;;      Temps:          0       0       0       0
  1877 ;;      Totals:         0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    4
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_SYSTEM_Initialize
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _OSCILLATOR_Initialize
  1890  0145                     _OSCILLATOR_Initialize:	
  1891                           
  1892                           ;mcc.c: 62: OSCCON = 0x7A;
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1896  0145  307A               	movlw	122
  1897  0146  0021               	movlb	1	; select bank1
  1898  0147  0099               	movwf	25	;volatile
  1899                           
  1900                           ;mcc.c: 64: OSCTUNE = 0x00;
  1901  0148  0198               	clrf	24	;volatile
  1902                           
  1903                           ;mcc.c: 66: BORCON = 0x00;
  1904  0149  0022               	movlb	2	; select bank2
  1905  014A  0196               	clrf	22	;volatile
  1906  014B  0008               	return
  1907  014C                     __end_of_OSCILLATOR_Initialize:	
  1908                           
  1909                           	psect	text7
  1910  0053                     __ptext7:	
  1911 ;; *************** function _EUSART_Initialize *****************
  1912 ;; Defined at:
  1913 ;;		line 73 in file "mcc_generated_files/eusart.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1927 ;;      Params:         0       0       0       0
  1928 ;;      Locals:         0       0       0       0
  1929 ;;      Temps:          0       1       0       0
  1930 ;;      Totals:         0       1       0       0
  1931 ;;Total ram usage:        1 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    5
  1934 ;; This function calls:
  1935 ;;		_EUSART_SetRxInterruptHandler
  1936 ;;		_EUSART_SetTxInterruptHandler
  1937 ;; This function is called by:
  1938 ;;		_SYSTEM_Initialize
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _EUSART_Initialize
  1944  0053                     _EUSART_Initialize:	
  1945                           
  1946                           ;eusart.c: 76: PIE1bits.RCIE = 0;
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1950  0053  0021               	movlb	1	; select bank1
  1951  0054  1291               	bcf	17,5	;volatile
  1952                           
  1953                           ;eusart.c: 77: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1954  0055  30DB               	movlw	low _EUSART_Receive_ISR
  1955  0056  00FA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  1956  0057  3000               	movlw	high _EUSART_Receive_ISR
  1957  0058  00FB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  1958  0059  3181  2165  3180   	fcall	_EUSART_SetRxInterruptHandler
  1959                           
  1960                           ;eusart.c: 78: PIE1bits.TXIE = 0;
  1961  005C  0021               	movlb	1	; select bank1
  1962  005D  1211               	bcf	17,4	;volatile
  1963                           
  1964                           ;eusart.c: 79: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  1965  005E  30A4               	movlw	low _EUSART_Transmit_ISR
  1966  005F  00FA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  1967  0060  3000               	movlw	high _EUSART_Transmit_ISR
  1968  0061  00FB               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  1969  0062  3181  215F         	fcall	_EUSART_SetTxInterruptHandler
  1970                           
  1971                           ;eusart.c: 83: BAUDCON = 0x08;
  1972  0064  3008               	movlw	8
  1973  0065  0023               	movlb	3	; select bank3
  1974  0066  009F               	movwf	31	;volatile
  1975                           
  1976                           ;eusart.c: 86: RCSTA = 0x90;
  1977  0067  3090               	movlw	144
  1978  0068  009D               	movwf	29	;volatile
  1979                           
  1980                           ;eusart.c: 89: TXSTA = 0x24;
  1981  0069  3024               	movlw	36
  1982  006A  009E               	movwf	30	;volatile
  1983                           
  1984                           ;eusart.c: 92: SPBRGL = 0xA0;
  1985  006B  30A0               	movlw	160
  1986  006C  009B               	movwf	27	;volatile
  1987                           
  1988                           ;eusart.c: 95: SPBRGH = 0x01;
  1989  006D  3001               	movlw	1
  1990  006E  009C               	movwf	28	;volatile
  1991                           
  1992                           ;eusart.c: 99: eusartTxHead = 0;
  1993  006F  01F3               	clrf	_eusartTxHead	;volatile
  1994                           
  1995                           ;eusart.c: 100: eusartTxTail = 0;
  1996  0070  01F2               	clrf	_eusartTxTail	;volatile
  1997                           
  1998                           ;eusart.c: 101: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  1999  0071  3032               	movlw	50
  2000  0072  0020               	movlb	0	; select bank0
  2001  0073  00E4               	movwf	??_EUSART_Initialize
  2002  0074  0864               	movf	??_EUSART_Initialize,w
  2003  0075  00E2               	movwf	_eusartTxBufferRemaining	;volatile
  2004                           
  2005                           ;eusart.c: 103: eusartRxHead = 0;
  2006  0076  01F1               	clrf	_eusartRxHead	;volatile
  2007                           
  2008                           ;eusart.c: 104: eusartRxTail = 0;
  2009  0077  01F0               	clrf	_eusartRxTail	;volatile
  2010                           
  2011                           ;eusart.c: 105: eusartRxCount = 0;
  2012  0078  01F6               	clrf	_eusartRxCount
  2013                           
  2014                           ;eusart.c: 108: PIE1bits.RCIE = 1;
  2015  0079  0021               	movlb	1	; select bank1
  2016  007A  1691               	bsf	17,5	;volatile
  2017  007B  0008               	return
  2018  007C                     __end_of_EUSART_Initialize:	
  2019                           
  2020                           	psect	text8
  2021  015F                     __ptext8:	
  2022 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2023 ;; Defined at:
  2024 ;;		line 217 in file "mcc_generated_files/eusart.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  2027 ;;		 -> EUSART_Transmit_ISR(1), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2039 ;;      Params:         2       0       0       0
  2040 ;;      Locals:         0       0       0       0
  2041 ;;      Temps:          0       0       0       0
  2042 ;;      Totals:         2       0       0       0
  2043 ;;Total ram usage:        2 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    4
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_EUSART_Initialize
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _EUSART_SetTxInterruptHandler
  2055  015F                     _EUSART_SetTxInterruptHandler:	
  2056                           
  2057                           ;eusart.c: 218: EUSART_TxDefaultInterruptHandler = interruptHandler;
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2061  015F  087B               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  2062  0160  0020               	movlb	0	; select bank0
  2063  0161  00E1               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2064  0162  087A               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  2065  0163  00E0               	movwf	_EUSART_TxDefaultInterruptHandler
  2066  0164  0008               	return
  2067  0165                     __end_of_EUSART_SetTxInterruptHandler:	
  2068                           
  2069                           	psect	text9
  2070  0165                     __ptext9:	
  2071 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2072 ;; Defined at:
  2073 ;;		line 221 in file "mcc_generated_files/eusart.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  2076 ;;		 -> EUSART_Receive_ISR(1), 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2088 ;;      Params:         2       0       0       0
  2089 ;;      Locals:         0       0       0       0
  2090 ;;      Temps:          0       0       0       0
  2091 ;;      Totals:         2       0       0       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    4
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_EUSART_Initialize
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function _EUSART_SetRxInterruptHandler
  2104  0165                     _EUSART_SetRxInterruptHandler:	
  2105                           
  2106                           ;eusart.c: 222: EUSART_RxDefaultInterruptHandler = interruptHandler;
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2110  0165  087B               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  2111  0166  0020               	movlb	0	; select bank0
  2112  0167  00DF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2113  0168  087A               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  2114  0169  00DE               	movwf	_EUSART_RxDefaultInterruptHandler
  2115  016A  0008               	return
  2116  016B                     __end_of_EUSART_SetRxInterruptHandler:	
  2117                           
  2118                           	psect	text10
  2119  010A                     __ptext10:	
  2120 ;; *************** function _EUSART_Deal *****************
  2121 ;; Defined at:
  2122 ;;		line 226 in file "mcc_generated_files/eusart.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2136 ;;      Params:         0       0       0       0
  2137 ;;      Locals:         0       0       0       0
  2138 ;;      Temps:          0       0       0       0
  2139 ;;      Totals:         0       0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    5
  2143 ;; This function calls:
  2144 ;;		_Get_Device_Addr
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _EUSART_Deal
  2152  010A                     _EUSART_Deal:	
  2153                           
  2154                           ;eusart.c: 228: if(eusartRxBuffer[0] == 0xA5 && eusartRxBuffer[1] == 0x5A)
  2155                           
  2156                           ;incstack = 0
  2157                           ; Regs used in _EUSART_Deal: [wreg+status,2+status,0+pclath+cstack]
  2158  010A  30A5               	movlw	165
  2159  010B  0020               	movlb	0	; select bank0
  2160  010C  0620               	xorwf	_eusartRxBuffer,w
  2161  010D  1D03               	btfss	3,2
  2162  010E  0008               	return
  2163  010F  305A               	movlw	90
  2164  0110  0621               	xorwf	_eusartRxBuffer+1,w
  2165  0111  1D03               	btfss	3,2
  2166  0112  0008               	return
  2167                           
  2168                           ;eusart.c: 229: {
  2169                           ;eusart.c: 230: if(eusartRxBuffer[2] == eusartRxCount)
  2170  0113  0822               	movf	_eusartRxBuffer+2,w
  2171  0114  0676               	xorwf	_eusartRxCount,w
  2172  0115  1D03               	skipz
  2173  0116  0008               	return
  2174                           
  2175                           ;eusart.c: 231: {
  2176                           ;eusart.c: 232: if(eusartRxBuffer[4] == Get_Device_Addr())
  2177  0117  3181  2129         	fcall	_Get_Device_Addr
  2178                           
  2179                           ;eusart.c: 239: {
  2180                           
  2181                           ;eusart.c: 235: {
  2182                           ;eusart.c: 237: }
  2183  0119  0008               	return
  2184  011A                     __end_of_EUSART_Deal:	
  2185                           
  2186                           	psect	text11
  2187  0129                     __ptext11:	
  2188 ;; *************** function _Get_Device_Addr *****************
  2189 ;; Defined at:
  2190 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  device_addr     1    3[COMMON] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      unsigned char 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2204 ;;      Params:         0       0       0       0
  2205 ;;      Locals:         1       0       0       0
  2206 ;;      Temps:          1       0       0       0
  2207 ;;      Totals:         2       0       0       0
  2208 ;;Total ram usage:        2 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    4
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_EUSART_Deal
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _Get_Device_Addr
  2220  0129                     _Get_Device_Addr:	
  2221                           
  2222                           ;mcc.c: 77: unsigned char device_addr;
  2223                           ;mcc.c: 79: device_addr = PORTBbits.RB4;
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _Get_Device_Addr: [wreg+status,2+status,0]
  2227  0129  3000               	movlw	0
  2228  012A  0020               	movlb	0	; select bank0
  2229  012B  1A0D               	btfsc	13,4	;volatile
  2230  012C  3001               	movlw	1
  2231  012D  00FB               	movwf	Get_Device_Addr@device_addr
  2232                           
  2233                           ;mcc.c: 80: device_addr |= PORTBbits.RB6 << 1;
  2234  012E  0E0D               	swapf	13,w	;volatile
  2235  012F  0C89               	rrf	9,f
  2236  0130  0C89               	rrf	9,f
  2237  0131  3901               	andlw	1
  2238  0132  0709               	addwf	9,w
  2239  0133  00FA               	movwf	??_Get_Device_Addr
  2240  0134  087A               	movf	??_Get_Device_Addr,w
  2241  0135  04FB               	iorwf	Get_Device_Addr@device_addr,f
  2242                           
  2243                           ;mcc.c: 82: return device_addr;
  2244  0136  087B               	movf	Get_Device_Addr@device_addr,w
  2245  0137  0008               	return
  2246  0138                     __end_of_Get_Device_Addr:	
  2247                           
  2248                           	psect	intentry
  2249  0004                     __pintentry:	
  2250 ;; *************** function _INTERRUPT_InterruptManager *****************
  2251 ;; Defined at:
  2252 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2266 ;;      Params:         0       0       0       0
  2267 ;;      Locals:         0       0       0       0
  2268 ;;      Temps:          1       0       0       0
  2269 ;;      Totals:         1       0       0       0
  2270 ;;Total ram usage:        1 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    3
  2273 ;; This function calls:
  2274 ;;		Absolute function
  2275 ;;		_EUSART_Receive_ISR
  2276 ;;		_EUSART_Transmit_ISR
  2277 ;;		_TMR0_ISR
  2278 ;; This function is called by:
  2279 ;;		Interrupt level 1
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283  0004                     _INTERRUPT_InterruptManager:	
  2284                           
  2285                           ;incstack = 0
  2286  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2287                           
  2288                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2289  0005  3180               	pagesel	$
  2290  0006  0020               	movlb	0	; select bank0
  2291  0007  087F               	movf	127,w
  2292  0008  00F9               	movwf	??_INTERRUPT_InterruptManager
  2293                           
  2294                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2295  0009  1A8B               	btfsc	11,5	;volatile
  2296  000A  1D0B               	btfss	11,2	;volatile
  2297  000B  2810               	goto	i1l89
  2298                           
  2299                           ;interrupt_manager.c: 56: {
  2300                           ;interrupt_manager.c: 57: TMR0_ISR();
  2301  000C  3181  214C  3180   	fcall	_TMR0_ISR
  2302                           
  2303                           ;interrupt_manager.c: 58: }
  2304  000F  2829               	goto	i1l97
  2305  0010                     i1l89:	
  2306                           
  2307                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  2308  0010  1F0B               	btfss	11,6	;volatile
  2309  0011  2829               	goto	i1l97
  2310                           
  2311                           ;interrupt_manager.c: 60: {
  2312                           ;interrupt_manager.c: 61: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  2313  0012  0021               	movlb	1	; select bank1
  2314  0013  1E11               	btfss	17,4	;volatile
  2315  0014  281E               	goto	i1l92
  2316  0015  0020               	movlb	0	; select bank0
  2317  0016  1E11               	btfss	17,4	;volatile
  2318  0017  281E               	goto	i1l92
  2319                           
  2320                           ;interrupt_manager.c: 62: {
  2321                           ;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
  2322  0018  0861               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  2323  0019  008A               	movwf	10
  2324  001A  0860               	movf	_EUSART_TxDefaultInterruptHandler,w
  2325  001B  000A               	callw
  2326  001C  3180               	pagesel	$
  2327                           
  2328                           ;interrupt_manager.c: 64: }
  2329  001D  2829               	goto	i1l97
  2330  001E                     i1l92:	
  2331                           
  2332                           ;interrupt_manager.c: 65: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  2333  001E  0021               	movlb	1	; select bank1
  2334  001F  1E91               	btfss	17,5	;volatile
  2335  0020  2829               	goto	i1l97
  2336  0021  0020               	movlb	0	; select bank0
  2337  0022  1E91               	btfss	17,5	;volatile
  2338  0023  2829               	goto	i1l97
  2339                           
  2340                           ;interrupt_manager.c: 66: {
  2341                           ;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
  2342  0024  085F               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  2343  0025  008A               	movwf	10
  2344  0026  085E               	movf	_EUSART_RxDefaultInterruptHandler,w
  2345  0027  000A               	callw
  2346  0028  3180               	pagesel	$
  2347  0029                     i1l97:	
  2348                           ;interrupt_manager.c: 74: else
  2349                           ;interrupt_manager.c: 75: {
  2350                           
  2351                           ;interrupt_manager.c: 72: }
  2352                           ;interrupt_manager.c: 73: }
  2353                           
  2354                           ;interrupt_manager.c: 69: else
  2355                           ;interrupt_manager.c: 70: {
  2356                           
  2357                           ;interrupt_manager.c: 68: }
  2358                           
  2359  0029  0879               	movf	??_INTERRUPT_InterruptManager,w
  2360  002A  0020               	movlb	0	; select bank0
  2361  002B  00FF               	movwf	127
  2362  002C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2363  002D  0009               	retfie
  2364  002E                     __end_of_INTERRUPT_InterruptManager:	
  2365                           
  2366                           	psect	text13
  2367  014C                     __ptext13:	
  2368 ;; *************** function _TMR0_ISR *****************
  2369 ;; Defined at:
  2370 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2384 ;;      Params:         0       0       0       0
  2385 ;;      Locals:         0       0       0       0
  2386 ;;      Temps:          0       0       0       0
  2387 ;;      Totals:         0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    2
  2391 ;; This function calls:
  2392 ;;		_TMR0_CallBack
  2393 ;; This function is called by:
  2394 ;;		_INTERRUPT_InterruptManager
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _TMR0_ISR
  2400  014C                     _TMR0_ISR:	
  2401                           
  2402                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2406  014C  110B               	bcf	11,2	;volatile
  2407                           
  2408                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  2409  014D  0020               	movlb	0	; select bank0
  2410  014E  0863               	movf	_timer0ReloadVal,w	;volatile
  2411  014F  0095               	movwf	21	;volatile
  2412                           
  2413                           ;tmr0.c: 118: TMR0_CallBack();
  2414  0150  3180  207C         	fcall	_TMR0_CallBack
  2415  0152  0008               	return
  2416  0153                     __end_of_TMR0_ISR:	
  2417                           
  2418                           	psect	text14
  2419  007C                     __ptext14:	
  2420 ;; *************** function _TMR0_CallBack *****************
  2421 ;; Defined at:
  2422 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2436 ;;      Params:         0       0       0       0
  2437 ;;      Locals:         0       0       0       0
  2438 ;;      Temps:          1       0       0       0
  2439 ;;      Totals:         1       0       0       0
  2440 ;;Total ram usage:        1 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    1
  2443 ;; This function calls:
  2444 ;;		Absolute function
  2445 ;;		_TMR0_DefaultInterruptHandler
  2446 ;; This function is called by:
  2447 ;;		_TMR0_ISR
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _TMR0_CallBack
  2453  007C                     _TMR0_CallBack:	
  2454                           
  2455                           ;tmr0.c: 126: static uint8_t eusartRXOvertimeCnt = 0;
  2456                           ;tmr0.c: 127: static uint8_t timeCrlCnt = 0;
  2457                           ;tmr0.c: 129: if(timeCtrlStartFlag)
  2458                           
  2459                           ;incstack = 0
  2460                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2461  007C  0877               	movf	_timeCtrlStartFlag,w
  2462  007D  1903               	btfsc	3,2
  2463  007E  288B               	goto	i1l1124
  2464                           
  2465                           ;tmr0.c: 130: {
  2466                           ;tmr0.c: 131: if(++timeCrlCnt >= 10)
  2467  007F  3001               	movlw	1
  2468  0080  00F8               	movwf	??_TMR0_CallBack
  2469  0081  0878               	movf	??_TMR0_CallBack,w
  2470  0082  0020               	movlb	0	; select bank0
  2471  0083  07DA               	addwf	TMR0_CallBack@timeCrlCnt,f
  2472  0084  300A               	movlw	10
  2473  0085  025A               	subwf	TMR0_CallBack@timeCrlCnt,w
  2474  0086  1C03               	skipc
  2475  0087  288B               	goto	i1l1124
  2476                           
  2477                           ;tmr0.c: 132: {
  2478                           ;tmr0.c: 133: timeCrlCnt = 0;
  2479  0088  01DA               	clrf	TMR0_CallBack@timeCrlCnt
  2480                           
  2481                           ;tmr0.c: 134: timeCtrlOvertimeMask = 1;
  2482  0089  01DB               	clrf	_timeCtrlOvertimeMask
  2483  008A  0ADB               	incf	_timeCtrlOvertimeMask,f
  2484  008B                     i1l1124:	
  2485                           
  2486                           ;tmr0.c: 135: }
  2487                           ;tmr0.c: 136: }
  2488                           ;tmr0.c: 139: if(eusartRxCount != 0)
  2489  008B  0876               	movf	_eusartRxCount,w
  2490  008C  1903               	btfsc	3,2
  2491  008D  2899               	goto	i1l1132
  2492                           
  2493                           ;tmr0.c: 140: {
  2494                           ;tmr0.c: 141: if (++eusartRXOvertimeCnt >= 50)
  2495  008E  3001               	movlw	1
  2496  008F  00F8               	movwf	??_TMR0_CallBack
  2497  0090  0878               	movf	??_TMR0_CallBack,w
  2498  0091  07F4               	addwf	TMR0_CallBack@eusartRXOvertimeCnt,f
  2499  0092  3032               	movlw	50
  2500  0093  0274               	subwf	TMR0_CallBack@eusartRXOvertimeCnt,w
  2501  0094  1C03               	skipc
  2502  0095  2899               	goto	i1l1132
  2503                           
  2504                           ;tmr0.c: 142: {
  2505                           ;tmr0.c: 143: eusartRXOvertimeCnt = 0;
  2506  0096  01F4               	clrf	TMR0_CallBack@eusartRXOvertimeCnt
  2507                           
  2508                           ;tmr0.c: 144: eusartRxOvertimeMask = 1;
  2509  0097  01F5               	clrf	_eusartRxOvertimeMask
  2510  0098  0AF5               	incf	_eusartRxOvertimeMask,f
  2511  0099                     i1l1132:	
  2512                           
  2513                           ;tmr0.c: 145: }
  2514                           ;tmr0.c: 146: }
  2515                           ;tmr0.c: 148: if(TMR0_InterruptHandler)
  2516  0099  0020               	movlb	0	; select bank0
  2517  009A  085C               	movf	_TMR0_InterruptHandler,w
  2518  009B  045D               	iorwf	_TMR0_InterruptHandler+1,w
  2519  009C  1903               	btfsc	3,2
  2520  009D  0008               	return
  2521                           
  2522                           ;tmr0.c: 149: {
  2523                           ;tmr0.c: 150: TMR0_InterruptHandler();
  2524  009E  085D               	movf	_TMR0_InterruptHandler+1,w
  2525  009F  008A               	movwf	10
  2526  00A0  085C               	movf	_TMR0_InterruptHandler,w
  2527  00A1  000A               	callw
  2528  00A2  3180               	pagesel	$
  2529  00A3  0008               	return
  2530  00A4                     __end_of_TMR0_CallBack:	
  2531                           
  2532                           	psect	text15
  2533  016F                     __ptext15:	
  2534 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2535 ;; Defined at:
  2536 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		None
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2550 ;;      Params:         0       0       0       0
  2551 ;;      Locals:         0       0       0       0
  2552 ;;      Temps:          0       0       0       0
  2553 ;;      Totals:         0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_TMR0_Initialize
  2560 ;;		_TMR0_CallBack
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _TMR0_DefaultInterruptHandler
  2566  016F                     _TMR0_DefaultInterruptHandler:	
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  2570  016F  0008               	return
  2571  0170                     __end_of_TMR0_DefaultInterruptHandler:	
  2572                           
  2573                           	psect	text16
  2574  00A4                     __ptext16:	
  2575 ;; *************** function _EUSART_Transmit_ISR *****************
  2576 ;; Defined at:
  2577 ;;		line 179 in file "mcc_generated_files/eusart.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2591 ;;      Params:         0       0       0       0
  2592 ;;      Locals:         0       0       0       0
  2593 ;;      Temps:          1       0       0       0
  2594 ;;      Totals:         1       0       0       0
  2595 ;;Total ram usage:        1 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_EUSART_Initialize
  2601 ;;		_INTERRUPT_InterruptManager
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _EUSART_Transmit_ISR
  2607  00A4                     _EUSART_Transmit_ISR:	
  2608                           
  2609                           ;eusart.c: 183: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2613  00A4  3032               	movlw	50
  2614  00A5  0020               	movlb	0	; select bank0
  2615  00A6  0262               	subwf	_eusartTxBufferRemaining,w	;volatile
  2616  00A7  1803               	skipnc
  2617  00A8  28BE               	goto	i1l247
  2618                           
  2619                           ;eusart.c: 184: {
  2620                           ;eusart.c: 185: TXREG = eusartTxBuffer[eusartTxTail++];
  2621  00A9  0872               	movf	_eusartTxTail,w
  2622  00AA  3EA0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2623  00AB  0086               	movwf	6
  2624  00AC  0187               	clrf	7
  2625  00AD  0801               	movf	1,w
  2626  00AE  0023               	movlb	3	; select bank3
  2627  00AF  009A               	movwf	26	;volatile
  2628  00B0  3001               	movlw	1
  2629  00B1  00F8               	movwf	??_EUSART_Transmit_ISR
  2630  00B2  0878               	movf	??_EUSART_Transmit_ISR,w
  2631  00B3  07F2               	addwf	_eusartTxTail,f	;volatile
  2632                           
  2633                           ;eusart.c: 186: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2634  00B4  3032               	movlw	50
  2635  00B5  0272               	subwf	_eusartTxTail,w	;volatile
  2636  00B6  1803               	btfsc	3,0
  2637                           
  2638                           ;eusart.c: 187: {
  2639                           ;eusart.c: 188: eusartTxTail = 0;
  2640  00B7  01F2               	clrf	_eusartTxTail	;volatile
  2641                           
  2642                           ;eusart.c: 189: }
  2643                           ;eusart.c: 190: eusartTxBufferRemaining++;
  2644  00B8  3001               	movlw	1
  2645  00B9  00F8               	movwf	??_EUSART_Transmit_ISR
  2646  00BA  0878               	movf	??_EUSART_Transmit_ISR,w
  2647  00BB  0020               	movlb	0	; select bank0
  2648  00BC  07E2               	addwf	_eusartTxBufferRemaining,f	;volatile
  2649                           
  2650                           ;eusart.c: 191: }
  2651  00BD  0008               	return
  2652  00BE                     i1l247:	
  2653                           
  2654                           ;eusart.c: 192: else
  2655                           ;eusart.c: 193: {
  2656                           ;eusart.c: 194: PIE1bits.TXIE = 0;
  2657  00BE  0021               	movlb	1	; select bank1
  2658  00BF  1211               	bcf	17,4	;volatile
  2659  00C0  0008               	return
  2660  00C1                     __end_of_EUSART_Transmit_ISR:	
  2661                           
  2662                           	psect	text17
  2663  00DB                     __ptext17:	
  2664 ;; *************** function _EUSART_Receive_ISR *****************
  2665 ;; Defined at:
  2666 ;;		line 198 in file "mcc_generated_files/eusart.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2680 ;;      Params:         0       0       0       0
  2681 ;;      Locals:         0       0       0       0
  2682 ;;      Temps:          1       0       0       0
  2683 ;;      Totals:         1       0       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_EUSART_Initialize
  2690 ;;		_INTERRUPT_InterruptManager
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _EUSART_Receive_ISR
  2696  00DB                     _EUSART_Receive_ISR:	
  2697                           
  2698                           ;eusart.c: 200: if(1 == RCSTAbits.OERR)
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2702  00DB  0023               	movlb	3	; select bank3
  2703  00DC  1C9D               	btfss	29,1	;volatile
  2704  00DD  28E0               	goto	i1l1200
  2705                           
  2706                           ;eusart.c: 201: {
  2707                           ;eusart.c: 204: RCSTAbits.CREN = 0;
  2708  00DE  121D               	bcf	29,4	;volatile
  2709                           
  2710                           ;eusart.c: 205: RCSTAbits.CREN = 1;
  2711  00DF  161D               	bsf	29,4	;volatile
  2712  00E0                     i1l1200:	
  2713                           
  2714                           ;eusart.c: 206: }
  2715                           ;eusart.c: 209: eusartRxBuffer[eusartRxHead++] = RCREG;
  2716  00E0  0819               	movf	25,w	;volatile
  2717  00E1  00F8               	movwf	??_EUSART_Receive_ISR
  2718  00E2  0871               	movf	_eusartRxHead,w
  2719  00E3  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2720  00E4  0086               	movwf	6
  2721  00E5  0187               	clrf	7
  2722  00E6  0878               	movf	??_EUSART_Receive_ISR,w
  2723  00E7  0081               	movwf	1
  2724  00E8  3001               	movlw	1
  2725  00E9  00F8               	movwf	??_EUSART_Receive_ISR
  2726  00EA  0878               	movf	??_EUSART_Receive_ISR,w
  2727  00EB  07F1               	addwf	_eusartRxHead,f	;volatile
  2728                           
  2729                           ;eusart.c: 210: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2730  00EC  3032               	movlw	50
  2731  00ED  0271               	subwf	_eusartRxHead,w	;volatile
  2732  00EE  1803               	btfsc	3,0
  2733                           
  2734                           ;eusart.c: 211: {
  2735                           ;eusart.c: 212: eusartRxHead = 0;
  2736  00EF  01F1               	clrf	_eusartRxHead	;volatile
  2737                           
  2738                           ;eusart.c: 213: }
  2739                           ;eusart.c: 214: eusartRxCount++;
  2740  00F0  3001               	movlw	1
  2741  00F1  00F8               	movwf	??_EUSART_Receive_ISR
  2742  00F2  0878               	movf	??_EUSART_Receive_ISR,w
  2743  00F3  07F6               	addwf	_eusartRxCount,f
  2744  00F4  0008               	return
  2745  00F5                     __end_of_EUSART_Receive_ISR:	
  2746  007E                     btemp	set	126	;btemp
  2747  007E                     int$flags	set	126
  2748  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         182
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      1      69
    BANK1            80      0      50
    BANK2            80      0      64

Pointer List with Targets:

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 


Critical Paths under _main in COMMON

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _EUSART_Deal->_Get_Device_Addr

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     249
                        _EUSART_Deal
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     225
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      75
                                              0 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      75
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     150
                                              0 BANK0      1     1      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      75
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      75
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Deal                                          0     0      0      24
                    _Get_Device_Addr
 ---------------------------------------------------------------------------------
 (2) _Get_Device_Addr                                      2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Deal
     _Get_Device_Addr
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      1      45       6       86.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      32       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      C3      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 12 10:03:00 2018

               ?_EUSART_SetRxInterruptHandler 007A                                   __CFG_CP$OFF 0000  
                             _timer0ReloadVal 0063                                   __CFG_LVP$ON 0000  
                                __CFG_CPD$OFF 0000                                  __CFG_BORV$LO 0000  
                                         wreg 0009                                  __CFG_IESO$ON 0000  
                                ?_EUSART_Deal 0078                                          l1332 013D  
                                        _LATA 010C                                          _LATB 010D  
                                        _LATC 010E                                          i1l92 001E  
                                        i1l97 0029                                          i1l89 0010  
                                        _TMR0 0015                                          _WPUA 020C  
                                        _WPUB 020D                                          _WPUC 020E  
                                __CFG_WRT$OFF 0000                                 __CFG_FCMEN$ON 0000  
                                        _main 0138                                          fsr0h 0005  
                                        fsr1h 0007                                          indf0 0000  
                                        fsr0l 0004                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
                               __CFG_BOREN$ON 0000                                          start 002E  
                               __CFG_MCLRE$ON 0000                       __end_of_TMR0_Initialize 010A  
                               __CFG_PLLEN$ON 0000                ??_TMR0_DefaultInterruptHandler 0078  
                  Get_Device_Addr@device_addr 007B                __size_of_OSCILLATOR_Initialize 0007  
               __end_of_OSCILLATOR_Initialize 014C                                         ?_main 0078  
                               __CFG_WDTE$OFF 0000                                         i1l247 00BE  
                                       _RCREG 0199                                         _RCSTA 019D  
                                       _TRISA 008C                                         _TRISB 008D  
                                       _TRISC 008E                                         _TXREG 019A  
                                       _TXSTA 019E             __size_of_TMR0_SetInterruptHandler 0006  
                   ?_TMR0_SetInterruptHandler 007A                              __end_of_TMR0_ISR 0153  
                              _WDT_Initialize 016B                                         pclath 000A  
                                       status 0003                                         wtemp0 007E  
                           ??_Get_Device_Addr 007A                               __initialization 0030  
                                __end_of_main 0145                   ?_INTERRUPT_InterruptManager 0078  
              ??_EUSART_SetRxInterruptHandler 007C                                        ??_main 007C  
                      __end_of_WDT_Initialize 016F                                        _ANSELA 018C  
                                      _ANSELB 018D                                        _ANSELC 018E  
                                      _BORCON 0116                                        i1l1200 00E0  
                                      i1l1132 0099                                        i1l1124 008B  
                                      _OSCCON 0099                                        _SPBRGH 019C  
                                      _SPBRGL 019B                                        _WDTCON 0097  
                              __CFG_PWRTE$OFF 0000                                __CFG_STVREN$ON 0000  
                         _EUSART_Transmit_ISR 00A4                              ?_TMR0_Initialize 0078  
                        _eusartRxOvertimeMask 0075                               ?_WDT_Initialize 0078  
                       __end_of_TMR0_CallBack 00A4      TMR0_SetInterruptHandler@InterruptHandler 007A  
                        ?_EUSART_Transmit_ISR 0078                          __size_of_EUSART_Deal 0010  
                           _SYSTEM_Initialize 011A                       __end_of__initialization 004F  
                          ?_SYSTEM_Initialize 0078          __end_of_EUSART_SetTxInterruptHandler 0165  
       __size_of_EUSART_SetTxInterruptHandler 0006                  _EUSART_SetTxInterruptHandler 015F  
                              __pcstackCOMMON 0078                           ??_SYSTEM_Initialize 007C  
                                   ?_TMR0_ISR 0078                                _OPTION_REGbits 0095  
                   __end_of_SYSTEM_Initialize 0129                         ??_EUSART_Transmit_ISR 0078  
                                  __pbssBANK0 0020                                    __pbssBANK1 00A0  
                                  __pbssBANK2 0120                   __size_of_EUSART_Receive_ISR 001A  
                                  __pmaintext 0138                 ?_EUSART_SetTxInterruptHandler 007A  
            _EUSART_TxDefaultInterruptHandler 0060              __end_of_TMR0_SetInterruptHandler 015F  
                                  ??_TMR0_ISR 0079                                    __pintentry 0004  
                                     _BAUDCON 019F                                       _APFCON0 011D  
                                     _APFCON1 011E                                 _eusartRxCount 0076  
                                     _OSCTUNE 0098                               _Get_Device_Addr 0129  
                                     __ptext1 011A                                       __ptext2 016B  
                                     __ptext3 00F5                                       __ptext4 0159  
                                     __ptext5 00C1                                       __ptext6 0145  
                                     __ptext7 0053                                       __ptext8 015F  
                                     __ptext9 0165                         _OSCILLATOR_Initialize 0145  
                    ??_PIN_MANAGER_Initialize 007A                    __size_of_SYSTEM_Initialize 000F  
                                     clrloop0 0154                          end_of_initialization 004F  
                              _timeCtrlIQRSta 0052                             _EUSART_Initialize 0053  
                          ?_EUSART_Initialize 0078                                     _RCSTAbits 019D  
                         ??_EUSART_Initialize 0064                              ??_WDT_Initialize 007A  
              ??_EUSART_SetTxInterruptHandler 007C                      _TMR0_SetInterruptHandler 0159  
                                   _PORTBbits 000D                       __end_of_Get_Device_Addr 0138  
                            __CFG_FOSC$INTOSC 0000                     __end_of_EUSART_Initialize 007C  
                                   _TXSTAbits 019E                             __size_of_TMR0_ISR 0007  
                      ?_OSCILLATOR_Initialize 0078                           start_initialization 0030  
                    __size_of_TMR0_Initialize 0015               __size_of_PIN_MANAGER_Initialize 001A  
                               ??_EUSART_Deal 007C  EUSART_SetRxInterruptHandler@interruptHandler 007A  
EUSART_SetTxInterruptHandler@interruptHandler 007A              TMR0_CallBack@eusartRXOvertimeCnt 0074  
                     TMR0_CallBack@timeCrlCnt 005A                        __size_of_TMR0_CallBack 0028  
                        _timeCtrlOvertimeMask 005B                              ?_Get_Device_Addr 0078  
                 __end_of_EUSART_Transmit_ISR 00C1                                   __pbssCOMMON 0070  
                                   ___latbits 0001                                 __pcstackBANK0 0064  
                  __end_of_EUSART_Receive_ISR 00F5                    __size_of_EUSART_Initialize 0029  
                         __end_of_EUSART_Deal 011A              _EUSART_RxDefaultInterruptHandler 005E  
                       _TMR0_InterruptHandler 005C                                     __pnvBANK0 005C  
                      _PIN_MANAGER_Initialize 00C1                                  _eusartRxHead 0071  
                                _eusartTxHead 0073                                  _eusartRxTail 0070  
                                _eusartTxTail 0072                  ??_INTERRUPT_InterruptManager 0079  
                     _eusartTxBufferRemaining 0062                             _timeCtrlStartFlag 0077  
                               _TMR0_CallBack 007C                                _eusartRxBuffer 0020  
                           ??_TMR0_Initialize 0064                                _eusartTxBuffer 00A0  
                                   clear_ram0 0153                                      _PIE1bits 0091  
                               _timeCtrlValue 0120           __size_of_INTERRUPT_InterruptManager 002A  
                  ??_TMR0_SetInterruptHandler 007C                                      _PIR1bits 0011  
                                    _TMR0_ISR 014C                                ?_TMR0_CallBack 0078  
                                 _EUSART_Deal 010A                       ??_OSCILLATOR_Initialize 007A  
                                    __ptext10 010A                                      __ptext11 0129  
                                    __ptext13 014C                                      __ptext14 007C  
                                    __ptext15 016F                                      __ptext16 00A4  
                                    __ptext17 00DB                                 __size_of_main 000D  
        __end_of_TMR0_DefaultInterruptHandler 0170         __size_of_TMR0_DefaultInterruptHandler 0001  
                _TMR0_DefaultInterruptHandler 016F                                      int$flags 007E  
          __end_of_INTERRUPT_InterruptManager 002E                    _INTERRUPT_InterruptManager 0004  
                                  _INTCONbits 000B                               ??_TMR0_CallBack 0078  
                     __size_of_WDT_Initialize 0004                                      intlevel1 0000  
                     ?_PIN_MANAGER_Initialize 0078                             __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART_SetRxInterruptHandler 016B         __size_of_EUSART_SetRxInterruptHandler 0006  
                _EUSART_SetRxInterruptHandler 0165                 ?_TMR0_DefaultInterruptHandler 0078  
                          _EUSART_Receive_ISR 00DB                                    _OPTION_REG 0095  
                         ?_EUSART_Receive_ISR 0078                               _TMR0_Initialize 00F5  
                    __size_of_Get_Device_Addr 000F                  __size_of_EUSART_Transmit_ISR 001D  
              __end_of_PIN_MANAGER_Initialize 00DB                          ??_EUSART_Receive_ISR 0078  
